

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta name="author" content="寂寞的人" />
    <meta name="Copyright" content="Csdn" />
    <meta name="description" content="logic:iterate遍历request中的数组对象" />
    <meta name="keywords" content="寂寞的人,logic:iterate" />
    <link rel="Shortcut Icon" href="http://profile.csdn.net/zm1313/picture/1.ico" />
    <link href="http://hi.images.csdn.net/css/marvin2/marvin2_1.css" type="text/css" rel="stylesheet" media="all" /><link href="http://hi.images.csdn.net/css/marvin2/marvin2_1.cssbrown.css" type="text/css" rel="stylesheet" media="all" /><link href="http://blog.csdn.net/zm1313/rss.aspx" title="RSS" type="application/rss+xml" rel="alternate" />
    <title>
        logic:iterate - zm1313的专栏 - CSDNBlog</title>
</head>
<body id="defaultuser">
    <div id="csdnblog_allwrap">
        <form name="Form1" method="post" action="729307.aspx" language="javascript" onsubmit="javascript:return WebForm_OnSubmit();" id="Form1">
<input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="" />
<input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" />
<input type="hidden" name="__VIEWSTATE" id="
__VIEWSTATE" value="" />

<script type="text/javascript">
<!--
var theForm = document.forms['Form1'];
if (!theForm) {
    theForm = document.Form1;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
// -->
</script>


<script type="text/javascript">
//<![CDATA[
var Anthem_FormID = "Form1";
//]]>
</script>
<script src="/WebResource.axd?d=xe4Hb-SpxzFzlneGulsvshD5tJaeoT5rOhxhNgNV4Rw1&amp;t=633532073515543195" type="text/javascript"></script>
<script src="/WebResource.axd?d=sCPKYj5Niyz0W_esyXefUe_mVagR4BQx1pHtu2ZkeZk1&amp;t=633368809778488179" type="text/javascript"></script>
<script type="text/javascript">
<!--
function WebForm_OnSubmit() {
if (typeof(ValidatorOnSubmit) == "function" && ValidatorOnSubmit() == false) return false;
return true;
}
// -->
</script>

        
<div id="csdnblog_midwrap">
    <div id="csdnblog_header">
        
        <h1><a id="Header1_HeaderTitle" href="http://blog.csdn.net/zm1313/">zm1313的专栏</a></h1><h2>奋斗成就男人</h2>
        
        <ul id="personalnav"><li><a href="http://passport.csdn.net/UserLogin.aspx">登录</a></li><li><a href="http://passport.csdn.net/CSDNUserRegister.aspx">注册</a></li></ul>
        
        <ul id="blogsearchsty"><li><input id="inputSearch" type="text" class="bolgsearch" onkeydown="return keyb(event)" /></li><li class="selectsty"><select name="Search:ddlSearchScope" id="Search_ddlSearchScope"><option value="all">全站</option><option value="zm1313">当前博客</option></select></li><li><input type="button" onclick="checkNull()" value="搜索" class="bolggobtn" /></li></ul>
        
        <ul id="menu"><li><a href="http://beta.hi.csdn.net/zm1313">空间</a></li><li><a href="http://blog.csdn.net/zm1313" class="on">博客</a></li><li><a href="http://beta.hi.csdn.net/zm1313/profile/contactlist/1.html">好友</a></li><li><a href="http://album.hi.csdn.net/" target="_blank">相册</a></li><li><a href="http://beta.hi.csdn.net/zm1313/profile/notebook/1.html" class="last">留言</a></li></ul>
    </div>
    <div id="csdnblog_sidebar">
        <div class="gutter">
            <div class="aboutauthor">
                <dl>
                    
                    <dt>用户操作</dt><dd class="middle"><a href="http://passport.csdn.net/UserLogin.aspx?from=http://webim.csdn.net/Messages/zm1313.ashx" target="_blank">[即时聊天]</a> <a href="http://passport.csdn.net/UserLogin.aspx?from=http://hi.csdn.net/Admin/WriteMessage.aspx?Receiver=zm1313" target="_blank">[发私信]</a> <a href="http://passport.csdn.net/UserLogin.aspx?from=http://webim.csdn.net/AddFriends/zm1313.ashx" target="_blank">[加为好友]</a></dd><dt>    寂寞的人<span>ID：zm1313</span></dt><dd class="middle">    <img src="http://avatar.profile.csdn.net/F/D/D/1_zm1313.jpg" alt="" /></dd><dd class="middle">    <a href="http://profile.csdn.net/8/E4/edit.html"></a></dd><dd>    共<em>115628</em>次访问，排名<em>809</em>，好友<em>0</em>人，关注者<em>0</em>人。<br/></dd><dd>    </dd><dt>zm1313的文章</dt><dd>原创 182 篇</dd><dd>翻译 0 篇</dd><dd>转载 10 篇</dd><dd>评论 17 篇</dd> 
                    
                    <dt>寂寞的人的公告</dt><dd><EMBED src="http://www.aswis.net/100000/clock/clock58.swf" type="application/x-shockwave-flash" width="180" height="180"></EMBED></dd>

                    <dt>最近评论</dt><dd>hejian0906：<a href="http://blog.csdn.net/zm1313/archive/2006/07/04/875700.aspx#958711" Title="点击查看《回复:Oracle-Sql 语句中 Case When 的应用》">恩，还可以了。就是太少</a></dd><dd>sqnswdyh：<a href="http://blog.csdn.net/zm1313/archive/2006/06/17/806669.aspx#867064" Title="点击查看《回复:PowerDesigner 讲解》">哎，不大明白，今天刚刚接触了powerdesigner</a></dd><dd>accpyouguo：<a href="http://blog.csdn.net/zm1313/archive/2006/05/16/740912.aspx#860188" Title="点击查看《回复:html:reset》">&lt;html:reset&gt;Reset&lt;/html:reset&gt;<br />与<br />    的区别很大， &lt;html:reset&gt;Reset&lt;/html:reset&gt;<br />它会保留上级的默认值<br />而&lt;input type="reset" name="reset" value="Reset"&gt;就会直接清空值.<br /……</a></dd><dd>accpyouguo：<a href="http://blog.csdn.net/zm1313/archive/2006/05/16/740912.aspx#860185" Title="点击查看《回复:html:reset》">&lt;html:reset&gt;Reset&lt;/html:reset&gt;<br />与<br />    的区别很大， &lt;html:reset&gt;Reset&lt;/html:reset&gt;<br />它会保留上级的默认值<br />而&lt;input type="reset" name="reset" value="Reset"&gt;就会直接清空值.<br /……</a></dd><dd>wglxm：<a href="http://blog.csdn.net/zm1313/archive/2006/04/04/650287.aspx#824371" Title="点击查看《回复:获得图片文件的图像尺寸大小》">哪位朋友能给此代码加上注释?<br /><br />小弟在此感谢了!!<br /></a></dd>
                    
                    <dt>文章分类</dt><dd><div class="publiclist_sidebar"><ul><li><a href="http://blog.csdn.net/zm1313/category/192136.aspx">Java--Charactor</a><a href="http://blog.csdn.net/zm1313/category/192136.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/192132.aspx">Java--DataBase</a><a href="http://blog.csdn.net/zm1313/category/192132.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/26807.aspx">Java--File</a><a href="http://blog.csdn.net/zm1313/category/26807.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/208693.aspx">JavaScript</a><a href="http://blog.csdn.net/zm1313/category/208693.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/225043.aspx">JSP--2.0</a><a href="http://blog.csdn.net/zm1313/category/225043.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/217659.aspx">Oracle--Sql</a><a href="http://blog.csdn.net/zm1313/category/217659.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/189937.aspx">PB--API</a><a href="http://blog.csdn.net/zm1313/category/189937.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/189941.aspx">PB--ole</a><a href="http://blog.csdn.net/zm1313/category/189941.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/179514.aspx">PB--TreeView</a><a href="http://blog.csdn.net/zm1313/category/179514.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/179513.aspx">PB--窗口控件菜单</a><a href="http://blog.csdn.net/zm1313/category/179513.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/179471.aspx">PB--事件</a><a href="http://blog.csdn.net/zm1313/category/179471.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/26808.aspx">PB--数据窗口</a><a href="http://blog.csdn.net/zm1313/category/26808.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/212493.aspx">PB--数据管道</a><a href="http://blog.csdn.net/zm1313/category/212493.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/179510.aspx">PB--数组</a><a href="http://blog.csdn.net/zm1313/category/179510.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/179476.aspx">PB--游标</a><a href="http://blog.csdn.net/zm1313/category/179476.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/209001.aspx">PowerDesigner</a><a href="http://blog.csdn.net/zm1313/category/209001.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/205670.aspx">Struts--ActionForm</a><a href="http://blog.csdn.net/zm1313/category/205670.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/202898.aspx">Struts--标签</a><a href="http://blog.csdn.net/zm1313/category/202898.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/203256.aspx">Struts--配置文件</a><a href="http://blog.csdn.net/zm1313/category/203256.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/213572.aspx">服务器与开发工具</a><a href="http://blog.csdn.net/zm1313/category/213572.aspx/rss">(RSS)</a></li><li><a href="http://blog.csdn.net/zm1313/category/180370.aspx">三教九流</a><a href="http://blog.csdn.net/zm1313/category/180370.aspx/rss">(RSS)</a></li></ul></div></dd><dt>收藏</dt><dd><div class="publiclist_sidebar"><ul></ul></div></dd><dt>相册</dt><dd><a href="http://blog.csdn.net/zm1313/Gallery/180372.aspx">发表文章所需图片</a></dd><dd><a href="http://blog.csdn.net/zm1313/Gallery/39089.aspx">功夫之李连杰</a></dd><dd><a href="http://blog.csdn.net/zm1313/Gallery/39088.aspx">功夫之李小龙</a></dd><dd><a href="http://blog.csdn.net/zm1313/Gallery/37175.aspx">兰亭序</a></dd><dd><a href="http://blog.csdn.net/zm1313/Gallery/39129.aspx">美女之赵雅芝</a></dd><dd><a href="http://blog.csdn.net/zm1313/Gallery/39124.aspx">射雕英雄传</a></dd><dd><a href="http://blog.csdn.net/zm1313/Gallery/179465.aspx">我的像册(不断更新)</a></dd><dd><a href="http://blog.csdn.net/zm1313/Gallery/39080.aspx">硬汉男人</a></dd><dt>存档</dt><dd><div class="publiclist_sidebar"><ul><li><a href="/zm1313/archive/2006/07.aspx">2006年07月(13)</a></li><li><a href="/zm1313/archive/2006/06.aspx">2006年06月(74)</a></li><li><a href="/zm1313/archive/2006/05.aspx">2006年05月(20)</a></li><li><a href="/zm1313/archive/2006/04.aspx">2006年04月(15)</a></li><li><a href="/zm1313/archive/2006/03.aspx">2006年03月(21)</a></li><li><a href="/zm1313/archive/2006/02.aspx">2006年02月(37)</a></li><li><a href="/zm1313/archive/2004/09.aspx">2004年09月(4)</a></li><li><a href="/zm1313/archive/2004/08.aspx">2004年08月(4)</a></li><li><a href="/zm1313/archive/2004/07.aspx">2004年07月(4)</a></li></ul></div></dd>

                    <span id="RecentVisitors"></span>
                    
                    <dt>软件项目交易</dt><dd><iframe style="margin:0;　padding:0; width: 180px; height: 32px;" src="http://prj.csdn.net/CSDN/CsdnBlog/CsdnBlogPage.html" frameborder="0" scrolling="no" ></iframe></dd>
                    
                    <span id="SubscriptionList"><dt>订阅我的博客</dt><dd><a href="http://blog.csdn.net/zm1313/Rss.aspx" ><img border="0" alt="XML聚合" src="/images/xml.gif" /></a>&nbsp;&nbsp;<a href="http://feeds.feedsky.com/csdn.net/zm1313" target="_blank"><img border="0" alt="FeedSky" src="/images/feedsky.gif" /></a></dd><dd><a href="http://www.xianguo.com/subscribe.php?url=http://blog.csdn.net/zm1313/Rss.aspx" target="_blank"><img border="0" alt="订阅到鲜果" src="/images/rss_xianguo.jpg"/></a></dd><dd><a href="http://fusion.google.com/add?feedurl=http://blog.csdn.net/zm1313/Rss.aspx" target="_blank"><img border="0" alt="订阅到Google" src="/images/rss_google.gif"/></a></dd><dd><a href="http://www.zhuaxia.com/add_channel.php?url=http://blog.csdn.net/zm1313/Rss.aspx" target="_blank"><img border="0" alt="订阅到抓虾" src="/images/rss_zhuaxia.gif"/></a></dd><dd><a href="http://www.bloglines.com/sub/http://blog.csdn.net/zm1313/Rss.aspx" target="_blank"><img border="0" alt="订阅到BlogLines" src="/images/rss_bloglines.gif"/></a></dd><dd><a href="http://add.my.yahoo.com/rss?url=http://blog.csdn.net/zm1313/Rss.aspx" target="_blank"><img border="0" alt="订阅到Yahoo" src="/images/rss_yahoo.gif"/></a></dd><dd><a href="http://rss.gougou.com/find_rss.jsp?url=http://blog.csdn.net/zm1313/Rss.aspx" target="_blank"><img border="0" alt="订阅到GouGou" src="/images/rss_gougou.gif"/></a></dd><dd><a href="http://www.pageflakes.com/subscribe.aspx?url=http://blog.csdn.net/zm1313/Rss.aspx" target="_blank"><img border="0" alt="订阅到飞鸽" src="/images/rss_pageflakes.gif"/></a></dd><dd><a href="http://www.rojo.com/add-subscription?resource=http://blog.csdn.net/zm1313/Rss.aspx" target="_blank"><img border="0" alt="订阅到Rojo" src="/images/rss_rojo.gif"/></a></dd><dd><a href="http://www.newsgator.com/ngs/subscriber/subfext.aspx?url=http://blog.csdn.net/zm1313/Rss.aspx" target="_blank"><img border="0" alt="订阅到newsgator" src="/images/rss_newsgator.gif"/></a></dd><dd><a href="http://www.netvibes.com/subscribe.php?url=http://blog.csdn.net/zm1313/Rss.aspx" target="_blank"><img border="0" alt="订阅到netvibes" src="/images/rss_netvibes.gif"/></a></dd></span>
                </dl>
            </div>
        </div>
    </div>
    
    <div id="csdnblog_content">
        <div class="gutter">
            
                    
<div class="default_contents">
    <div class="user_article">
        <script type="text/javascript" src="http://blog.csdn.net/js/LoadFeedbackCount.js"></script>
        <h1><img src="/images/authorship.gif" border="0" width="15" height="16" alt="原创" />&nbsp;<a href="http://blog.csdn.net/zm1313/archive/2006/05/15/729307.aspx">logic:iterate</a><cite class="fav_csdnstylebykimi"><a href="JavaScript:d=document;t=d.selection?(d.selection.type!='None'?d.selection.createRange().text:''):(d.getSelection?d.getSelection():'');void(saveit=window.open('http://wz.csdn.net/storeit.aspx?t='+escape(d.title)+'&u='+escape(d.location.href)+'&c='+escape(t),'saveit','scrollbars=no,width=590,height=300,left=75,top=20,status=no,resizable=yes'));saveit.focus();" class="fav_csdnstylebykimi" title="收藏到我的网摘中，并分享给我的朋友">收藏</a></cite></h1>
<div class="blogstory">
    <span id="Post.ascx_ViewPost_PreviousAndNextEntriesUp"><h3><a href="http://blog.csdn.net/zm1313/archive/2006/05/16/740912.aspx">新一篇:&nbsp;html:reset</a>&nbsp;|&nbsp;<a href="http://blog.csdn.net/zm1313/archive/2006/05/10/721865.aspx">旧一篇:&nbsp;数据窗口检索前记录滚动条位置, 检索后恢复原位置</a></h3></span>
    <script>function StorePage(){d=document;t=d.selection?(d.selection.type!='None'?d.selection.createRange().text:''):(d.getSelection?d.getSelection():'');void(keyit=window.open('http://www.365key.com/storeit.aspx?t='+escape(d.title)+'&u='+escape(d.location.href)+'&c='+escape(t),'keyit','scrollbars=no,width=475,height=575,left=75,top=20,status=no,resizable=yes'));keyit.focus();}</script><p>&lt;logic:iterate&gt; 是Logic 标签库中最复杂的标签，也是用途最广的一个标签，它能够在一个循环中遍历数组、Collection、Enumeration、Iterator 或 Map 中的所有元素。</p>
<p><font size="3"><span style="FONT-WEIGHT: bold"><font color="#0000ff" size="3">1. 遍历集合</font></span></font><br />&nbsp; &lt;logic:iterate&gt; 的 name 属性指定需要进行遍历的集合对象, 它每次从集合中检索出一个元素, 然后把它放在page 范围内, 并以id 属性指定的字符串来命名这个元素, 例如:</p>
<p><br />&nbsp;&nbsp;&nbsp; &lt;%<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Vector animals = new Vector();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; animals.addElement(&quot;Dog&quot;);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; animals.addElement(&quot;Cat&quot;);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; animals.addElement(&quot;Bird&quot;);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; animals.addElement(&quot;Chick&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; request.setAttribute(&quot;Animals&quot;, animals);<br />&nbsp;&nbsp;&nbsp; %&gt;<br />&nbsp;&nbsp;&nbsp; &lt;logic:iterate id=&quot;element&quot; name=&quot;Animals&quot;&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bean:write name=&quot;element&quot;/&gt;&lt;br&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/logic:iterate&gt;<br />&nbsp;&nbsp;&nbsp; 以上代码先定义了一个Vector 类型的集合变量 Animals, 它存放在request 范围内. 接下来&lt;logic:iterate&gt; 标签在一个循环中遍历Animals 集合(这个集合名就是在标签中的name 属性的值)中所有元素, 每次检索到一个元素, 就把它命名为&quot;element&quot;(标签id 属性的值), 并存放在page 范围内. <br />&nbsp;&nbsp;&nbsp; 在&lt;logic:iterate&gt; 中, 还嵌套了一个&lt;bean:write&gt;标签, 它用于输出每个元素的内容. 以上代码的输出内容如下:<br />&nbsp;&nbsp;&nbsp; Dog<br />&nbsp;&nbsp;&nbsp; Cat<br />&nbsp;&nbsp;&nbsp; Bird<br />&nbsp;&nbsp;&nbsp; Chick<br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;<font color="#ff0000" size="2">&nbsp; <font color="#000000"><strong>length&nbsp;&nbsp; &nbsp;属性指定需要遍历的元素的数目, 如果没有设置length 属性, 就遍历集合中的所有元素.<br />&nbsp;&nbsp;&nbsp; offset&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;属性指定开始遍历的起始位置, 默认值为 &quot;0&quot; , 表示从集合的第一个元素开始遍历.<br />&nbsp;&nbsp;&nbsp; indexId&nbsp; 属性定义一个代表当前遍历元素序号的变量, 这个变量被存放在 page 范围内, 可以被标签主体的</strong></font></font>&lt;bean:write&gt; 标签访问. 例如:</p>
<p>&nbsp;&nbsp;&nbsp; &lt;logic:iterate&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=&quot;element&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">// 指定输出元素的名 与 &lt;bean:write&gt; 中name 属性一致<br /></font>&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; indexId=&quot;index&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#0000ff">// 遍历元素序号的变量, 这个变量放在page 范围内<br /></font>&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=&quot;Animals&quot;&nbsp;&nbsp;&nbsp; <font color="#0000ff">// request 中的集合名, 从中取循环取出元素<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; offset=&quot;1&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#0000ff">// 从集合的第 2 条记录开始取数<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; length=&quot;2&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">// 取出 2 个元素<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bean:write name=&quot;index&quot;/&gt;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">// 输出每个元素的序号, 与indexId 的属性一致<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bean:write name=&quot;element&quot;/&gt;&lt;br&gt;&nbsp; <font color="#0000ff">// 输出每个元素的内容, 与id 的属性一致<br /></font>&nbsp;&nbsp;&nbsp; &lt;/logic:iterate&gt;</p>
<p><font size="4"><strong>2. 遍历Map</strong></font><br />&nbsp;&nbsp;&nbsp; &lt;logic:iterate&gt; 标签还可以遍历HashMap 中的元素, 例如:<br />&nbsp;&nbsp;&nbsp; &lt;%<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HashMap months = new HashMap();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; months.put(&quot;Jan&quot;,&quot;January&quot;);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; months.put(&quot;Feb&quot;,&quot;February&quot;);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; months.put(&quot;Mar&quot;,&quot;March&quot;);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; request.setAttribute(&quot;month&quot;, months);<br />&nbsp;&nbsp;&nbsp; %&gt;<br />&nbsp;&nbsp;&nbsp; &lt;logic:iterate id=&quot;element&quot; indexId=&quot;ind&quot; name=&quot;months&quot;&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bean:write name=&quot;ind&quot;/&gt;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff"> // 序号<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bean:write name=&quot;element&quot; property=&quot;key&quot;/&gt;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#0000ff">// 键名<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bean:write name=&quot;element&quot; property=&quot;value&quot;/&gt;&nbsp;&nbsp;&nbsp;<font color="#0000ff"> // 键值<br /></font>&nbsp;&nbsp;&nbsp; &lt;/logic:iterate&gt;<br />&nbsp;&nbsp;&nbsp; 以上代码先定义一个名为&quot;months&quot; 的HashMap, 存放在request 范围内. 接下来在&lt;logic:iterate&gt; 标签遍历months 对象的每一个元素, 每一个元素包含一对 key/value . 在&lt;logic:iterate&gt; 标签主体中包含三个&lt;bean:write&gt; 标签, 分别输出每个元素的序号、key 和 value. 以上代码的输出内容如下:<br />&nbsp;&nbsp;&nbsp; 0.Mar: March<br />&nbsp;&nbsp;&nbsp; 1.Feb: February<br />&nbsp;&nbsp;&nbsp; 2.Jan: January<br />&nbsp;&nbsp;&nbsp; 如果HashMap 中的每个元素的 value 是集合对象, 则可以采用嵌套的&lt;logic:iterate&gt;标签遍历集合中的所有对象, 例如:<br />&nbsp;&nbsp;&nbsp; &lt;%<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HashMap h = new HashMap();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String vegetables[] = {&quot;pepper&quot;,&quot;cucumber&quot;};<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String fruits[] = {&quot;apple&quot;,&quot;orange&quot;,&quot;banana&quot;,&quot;cherry&quot;,&quot;watermelon&quot;};<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String flowers[] = {&quot;chrysanthemum&quot;,&quot;rose&quot;};<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String trees[] = {&quot;willow&quot;};<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h.put(&quot;Vegetables&quot;, vegetables);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h.put(&quot;Fruits&quot;,fruits);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h.put(&quot;Flowers&quot;,flowers);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h.put(&quot;Trees&quot;,trees);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; request.setAttribute(&quot;catalog&quot;,h);<br />&nbsp;&nbsp;&nbsp; %&gt;<br />&nbsp;&nbsp;&nbsp; &lt;logic:iterate&nbsp;&nbsp; id=&quot;element&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#0000ff">// 与&lt;bean:write&gt; 中的name 属性对应, 输出内容<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; indexId=&quot;ind&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">// 与&lt;bean:write&gt; 中的name 属性对应, 输出序号<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=&quot;catelog&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">// 指定输出元素的名称<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bean:write name=&quot;ind&quot;/&gt;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#0000ff">// 输出序号<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bean:write name=&quot;element&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#0000ff">// 与&lt;logic:iterate&gt;中id 属性对应 <br /></font>&nbsp;&nbsp;property=&quot;key&quot;/&gt;&nbsp;&nbsp;&nbsp; // 集合中的键名</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;logic:iterate <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id=&quot;elementValue&quot;&nbsp;&nbsp; <font color="#0000ff">// 与&lt;bean:write&gt; 中的name 属性对应<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=&quot;element&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">// 指定输出元素的名称<br /></font>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; property=&quot;value&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">// 集合中的键值<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; length=&quot;3&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#0000ff">// 取3 个元素<br /></font>&nbsp;&nbsp;offset=&quot;1&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">&nbsp; // 从第 2 个位置取<br /></font>&nbsp;&nbsp;&nbsp;&nbsp; -------&lt;bean:write name=&quot;elementValue&quot;/&gt;<br />&nbsp;&lt;/logic:iterate&gt;</p>
<p>&nbsp;&nbsp;&nbsp; &lt;/logic:iterate&gt;</p>
<p><br />&nbsp;&nbsp;&nbsp; 以上代码先定义一个名为&quot;catelog&quot; 的HashMap , 存放在request 范围内, 它的每个元素的value 为字符串数组. <br />&nbsp;&nbsp;&nbsp; 接下来外层的&lt;logic:iterate&gt;标签遍历HashMap 中的所有元素, 内层的&lt;logic:iterate&gt;标签访问每个元素的value 属性, 遍历value 属性引用的字符串数组中的所有元素.</p>
<p><font color="#0000ff" size="4"><strong>3. 设置被遍历的变量</strong></font><br />&nbsp;&nbsp;&nbsp; 可以通过以下方式来设置需要遍历的变量<br />&nbsp;&nbsp;&nbsp; (1) 设置name 属性, name 属性指定需要遍历的集合或Map, 例如:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;logic:iterate id=&quot;element&quot; name=&quot;Animals&quot;&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bean:write name=&quot;element&quot;/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/logic:iterate&gt;<br />&nbsp;&nbsp;&nbsp; (2) 设置name 属性和property 属性, name 属性指定一个JavaBean, property 属性指定JavaBean 的一个属性, 这个属性为需要遍历的集合或Map, 例如:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;logic:iterate id=&quot;element&quot; indexId=&quot;ind&quot; name=&quot;catelog&quot;&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bean:write name=&quot;ind&quot;/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bean:write name=&quot;element&quot; property=&quot;key&quot;/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;logic:iterate id=&quot;elementValue&quot; name=&quot;element&quot; property=&quot;value&quot; length=&quot;3&quot; offset=&quot;1&quot;&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --------&lt;bean:write name=&quot;elementValue&quot;/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/logic:iterate&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/logic:iterate&gt;<br />&nbsp;&nbsp;&nbsp; (3) 设置collection 属性, collection 属性指定一个运行时表达式, 表达式的运算结果为需要遍历的集合或Map, 例如:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;logic:iterate id=&quot;header&quot; collection&quot;&lt;%=request.getHeaderNames()%&gt;&quot;&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bean:write name=&quot;header&quot;/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/logic:iterate&gt;</p>
<p><font color="#0000ff" size="4"><strong>4. 读取JavaBean 中的数据</strong></font><br />&nbsp; (1) 在Jsp 页面中加入JavaBean 如:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;jsp:useBean id=&quot;articleClasses&quot; class=&quot;com.GetArticleClasses&quot;/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 上面这个JavaBean 要求必须存在一个集合数组对象，如Vector,Collection,ArrayList 等；在这个JavaBean 的构造函数中，取得数据</p>
<p>库中的数据，并将其存入数组对象中。<br />&nbsp; (2) 使用&lt;logic:iterate&gt; 标签，取出JavaBean 中存放的数组对象中的数据</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;logic:iterate <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id=&quot;aClasses&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">//&nbsp; id&nbsp;&nbsp; : 给检索出的元素所命的名.<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=&quot;articleClasses&quot;&nbsp;&nbsp; <font color="#0000ff">//&nbsp; name : JavaBean 在页面中所设置的引用ID.<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; property=&quot;coll&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#0000ff">//&nbsp; coll : JavaBean 中的集合数组属性名称.<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td onMouseOver=&quot;this.bgColor='#FFFFFF'&quot; onMouseOut=&quot;this.bgColor=''&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;html:link&nbsp; page=&quot;/articleListAction.do&quot; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; paramId=&quot;classId&quot;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;paramName=&quot;aClasses&quot; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; paramProperty=&quot;classId&quot;&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&lt;bean:write name=&quot;aClasses&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#0000ff">// 与&lt;logic:iterate&gt; 标签中的id 属性相对应<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; property=&quot;className&quot; /&gt;&nbsp;&nbsp;&nbsp;&nbsp; <font color="#0000ff">// 取出JavaBean中， 存放在集合对象中的，对象的className 属性值<br /></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/html:link&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/logic:iterate&gt;<br />&nbsp; (3) 在JavaBean 中的集合对象中存放实体对象的语句如下:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ......<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public class GetArticleClasses<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 数据集合<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Collection coll;<br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 返回数据集合<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Collection getColl()<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return coll;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 构造函数, 取出数据，存入集合中<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public GetArticleClasses()<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; coll = new ArrayList();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 数据库连接<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Connection connection = DBConnection.getConnection();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(connection != null)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Statement statement = connection.createStatement();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ResultSet resultset;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ArticleClass articleclass;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resultset = statement.executeQuery(&quot;SELECT * FROM table ORDER BY id&quot;);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while( resultset.next())<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; articleclass = new ArticleClass();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; articleclass.setId(resultset.getInt(&quot;id&quot;));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; articleclass.setClassId(resultset.getString(&quot;class&quot;));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; articleclass.setClassName(resultset.getString(&quot;name&quot;));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; coll.add(articleclass))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resultset.close();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connection.close();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; coll = null;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch(Exception exception) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; coll = null;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; }<br />}</p><p class="right articalinfo">发表于 @ <a href="http://blog.csdn.net/zm1313/archive/2006/05/15/729307.aspx" Title = "permalink">2006年05月15日 12:17:00</a>&#124;<a href="http://blog.csdn.net/zm1313/archive/2006/05/15/729307.aspx#FeedBack" Title = "评论">评论(<span id="FeedbackCount_729307">loading...</span><script type="text/javascript">AddFeedbackCountStack("729307")</script>)</a>&#124;<a href="http://writeblog.csdn.net/PostEdit.aspx?entryId=729307" Title = "编辑">编辑</a></p>
    <span id="Post.ascx_ViewPost_PreviousAndNextEntriesDown"><h3><a href="http://blog.csdn.net/zm1313/archive/2006/05/16/740912.aspx">新一篇:&nbsp;html:reset</a>&nbsp;|&nbsp;<a href="http://blog.csdn.net/zm1313/archive/2006/05/10/721865.aspx">旧一篇:&nbsp;数据窗口检索前记录滚动条位置, 检索后恢复原位置</a></h3></span>
</div>

        <div id="Post.ascx_TagAd_palTagAd">
	
    <div class="tagadfornews" id="csdn_tag_adstyle">
    </div>

</div>

    </div>
    <div class="commentslist">
        <span id="Anthem_Post.ascx_Comments_ltlComments__"><span id="Post.ascx_Comments_ltlComments"><div id="commentslist"><h3>评论：没有评论。</h3></div></span></span>

    </div>
    <div class="spacecommment">
        <div id="Anthem_Post.ascx_PostComment_CommentUpdatePanel__"><div id="Post.ascx_PostComment_CommentUpdatePanel">
	
    <fieldset>
        <legend>发表评论</legend>
        <ul>
            <li>姓&nbsp;&nbsp;&nbsp;名：<input name="Post.ascx:PostComment:tbName" type="text" maxlength="32" id="Post.ascx_PostComment_tbName" disabled="disabled" Size="40" /><span controltovalidate="Post.ascx_PostComment_tbName" errormessage="请输入名字" id="Post.ascx_PostComment_RequiredFieldValidator2" evaluationfunction="RequiredFieldValidatorEvaluateIsValid" initialvalue="" style="color:Red;visibility:hidden;">请输入名字</span></li>
            <li>主&nbsp;&nbsp;&nbsp;页：<input name="Post.ascx:PostComment:tbUrl" type="text" maxlength="256" id="Post.ascx_PostComment_tbUrl" disabled="disabled" Size="40" /></li>
            <li>
                <div id="Post.ascx_PostComment_AntiBotImageRegion">
		
                    校验码：
                    <input name="Post.ascx:PostComment:tbAntiBotImage" type="text" id="Post.ascx_PostComment_tbAntiBotImage" style="width:75px;" />
                    <span display="Dynamic" id="Post.ascx_PostComment_valAntiBotImage" evaluationfunction="CustomValidatorEvaluateIsValid" style="color:Red;display:none;">检验码无效!</span>
                    <span id="Anthem_Post.ascx_PostComment_imgAntiBotImage__"><img id="Post.ascx_PostComment_imgAntiBotImage" src="/AntiBotImage.aspx?abi=4234&amp;id=729307" alt="" align="absmiddle" border="0" /></span>
                    <span id="Anthem_Post.ascx_PostComment_lbCreateAntiBotImage__"><a onclick="javascript:Anthem_FireCallBackEvent(this,event,'Post.ascx:PostComment:lbCreateAntiBotImage','',false,'','','',true,null,null,null,true,true);return false;" id="Post.ascx_PostComment_lbCreateAntiBotImage" href="javascript:__doPostBack('Post.ascx$PostComment$lbCreateAntiBotImage','')">看不清,换一张</a></span>
	</div>
            </li>
        </ul>
        <span controltovalidate="Post.ascx_PostComment_tbComment" errormessage="请输入评论" id="Post.ascx_PostComment_RequiredFieldValidator3" evaluationfunction="RequiredFieldValidatorEvaluateIsValid" initialvalue="" style="color:Red;visibility:hidden;">请输入评论</span><br />
        <textarea name="Post.ascx:PostComment:tbComment" rows="10" cols="50" id="Post.ascx_PostComment_tbComment" disabled="disabled"></textarea><br />
        <span id="Anthem_Post.ascx_PostComment_btnSubmit__"></span>
        <br />
        <span id="Post.ascx_PostComment_Message" style="color:Red;">当前用户设置只有注册用户才能发表评论。如果你没有登录，请点击<a href="http://passport.csdn.net/member/UserLogin.aspx?from=http://blog.csdn.net/zm1313/archive/2006/05/15/729307.aspx">登录</a></span>
    </fieldset>

</div></div>

    </div>

    <script type="text/javascript">
    LoadFeedbackCount();//加载评论
    document.write("<img src='http://counter.csdn.net/pv.aspx?id=24' border=0 width=0 height=0>");// 计数器
    ad_width=468;//加载广告
    ad_height=60;
    adcss=2;
    unionuser=19;
    tags='';
    ad_type='j';
    count=2;
    </script>

    <script src='/js/HighLighter.js' type="text/javascript"></script>

    <script language="javascript" src="http://tagegg.csdn.net/showads.js" type="text/javascript"></script>

    <script type="text/javascript">
    if(typeof(gms) != 'undefined') 
    {
        var outhtml='';
        for (var k in gms) {
	        outhtml+='<dl>';
	        outhtml+='<dt><a href="'+gms[k].link+'"><img src="'+gms[k].displink+'" alt="" /></a> ';
	        outhtml+='<dd class="tit"><a href="'+gms[k].link+'">'+gms[k].title+'</a></dd>';
	        outhtml+='<dd  >'+gms[k].desc1+"   "+gms[k].desc2+'</dd>';
	        outhtml+='</dl>';
        }
        document.getElementById("csdn_tag_adstyle").innerHTML=outhtml;
    }
    </script>

</div>
 
                
        </div>
    </div>
    
    <div id="pubfooter">
        
<dl>
    <dt></dt>
    <dd>
        Csdn Blog version 3.1a</dd>
    <dd>
        Copyright &copy;
        寂寞的人
    </dd>
</dl>

    </div>
</div>

        
<script type="text/javascript">
<!--
var Page_Validators =  new Array(document.getElementById("Post.ascx_PostComment_RequiredFieldValidator2"), document.getElementById("Post.ascx_PostComment_valAntiBotImage"), document.getElementById("Post.ascx_PostComment_RequiredFieldValidator3"));
// -->
</script>


<script type="text/javascript">
<!--
var Page_ValidationActive = false;
if (typeof(ValidatorOnLoad) == "function") {
    ValidatorOnLoad();
}

function ValidatorOnSubmit() {
    if (Page_ValidationActive) {
        return ValidatorCommonOnSubmit();
    }
    else {
        return true;
    }
}
// -->
</script>
        </form>

        <script type="text/javascript" src="http://www.csdn.net/common/counter.js"></script>

    </div>
</body>
</html>
