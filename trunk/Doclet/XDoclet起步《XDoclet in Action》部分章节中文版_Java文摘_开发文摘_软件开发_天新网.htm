<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>《XDoclet in Action》部分章节中文版_Java文摘_开发文摘_软件开发_天新网</title>
<meta name="keywords" content="《XDoclet in Action》部分章节中文版">
<meta name="description" content="转自：http://www.javaresearch.org/article/showarticle.jsp?column=331&amp;thread=26106XDoclet起步XDoc ...">
<script language="JavaScript">
var txsite_pagekey = 'TX-2-2-20050617-11441';
var txsite_pageurl = 'http://dev.21tx.com/2005/06/17/11441.html';
var txsite_pagetitle = '《XDoclet in Action》部分章节中文版';
</script>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
<meta http-equiv="Content-Language" content="zh-CN" />
<meta http-equiv="pragma" content="no-cache" />
<meta content="all" name="robots" />
<meta name="generator" content="TXSite.net 2005">
<script language="JavaScript" src="http://www.21tx.com/images/tx.js" type="text/javascript"></script>
<script language="JavaScript" src="http://www.21tx.com/images/swfobject.js" type="text/javascript"></script>
<link href="http://www.21tx.com/images/c.css" rel="stylesheet" type="text/css">
<style>
*{margin:0;padding:0;}
body {margin:0 auto;padding:0;color:black;background-color:white;font-size:12px;line-height:150%;text-align:center;}
div,form,img,ul,ol,li,dl,dt,dd {margin:0;padding:0;border:0;}
dt,dd{clear:both;}
textarea,input{font-size:12px;margin:0;padding:0;}
table,td,tr,th{font-size:12px;}
table{margin:auto;}
.f14 {font-size:14px;}

a:link {color:#009;text-decoration:none;}
a:visited{color:#800080;text-decoration:none;}
a:hover{color:#c00;text-decoration:underline;}
a:active{color:#c00;}

#txp_homemanu {width:962px;margin:0 auto;height:22px;background:#f8f8f8;color:#a1a0a0;text-align:center;line-height:18px;}
#txp_homemanu div{width:950px;margin:0 auto;text-align:right;padding-top:3px;font-size:12px; font-family:宋体;}
#txp_homemanu a{color:#a1a0a0;margin:0 3px;font-size:12px;text-decoration:none;padding:1px 3px 1px 3px;}
#txp_homemanu a:hover{color:#fff;background:#929292;}

#txp_mainmanu {width:962px;margin:0 auto;padding:6px 0 4px 0;height:39px;line-height:19px;background:#fff;font-family:宋体;}
#txp_mainmanulogo {float:left;width:130px;}
#txp_mainmanutext {float:left;width:832px;font-size:13px;padding-top:4px;}
#txp_mainmanutext a{color:#000;text-decoration:none;padding:2px 6px 0 6px;font-size:13px;}
#txp_mainmanutext a:hover{color:#f00;}
#txp_mainmanutext a.letter_l{padding:2px 0 0 6px;}
#txp_mainmanutext a.letter_r{padding:2px 6px 0 0;}

#txp_chanmanu {width:962px;margin:0 auto;}
#txp_chanmanu a{color:black;}
#txp_chanmanulogo {width:195px;float:left;}
#txp_chanmanutext {float:right;width:767px;}
#txp_chanmanu #txp_chanmanutext #txp_chanmanutexta {text-align:left;color:#ffffff;padding-left:20px;padding-top:6px;}
#txp_chanmanu #txp_chanmanutext #txp_chanmanutexta a{color:#ffffff;text-decoration:none;}
#txp_chanmanu #txp_chanmanutext #txp_chanmanutexta a:hover{text-decoration:underline;}
#txp_chanmanu #txp_chanmanutext #txp_chanmanutextb {text-align:left;padding-left:10px;padding-top:6px;}
#txp_chanmanu #txp_chanmanutext #txp_chanmanutextb p{position:absolute;filter:dropshadow(color=#ffffff,offx=1,offy=1,positive=1);}

#txa_top {margin:5px auto 5px auto;width:962px;height:90px;clear:both;}
#txa_top a{color:#666666;text-decoration:underline;}
#txa_top a:hover{color:red;text-decoration:none;}
#txa_top #txa_top728{float:left;width:728px;height:90px;}
#txa_top #txa_topnews{float:left;width:233px;height:88px;border:1px solid #CDC9CA;border-left:0;}
#txa_top #txa_topnews #txa_topnewstext{float:none;width:184px;margin:5px auto 0 24px;text-align:left;line-height:20px;}

#txp_main {width:962px;margin:0 auto;background:url(http://www.21tx.com/images/bg_main.gif) repeat-y;}
#txp_left {width:660px;float:left;}
#txp_right {float:right;width:302px;}
#txp_mainend {width:962px;margin:0 auto;height:1px;line-height:1px;font-size:1px;clear:both;}
#txp_mainend div{width:660px;border-bottom:1px solid #B7B7B7;float:left;height:1px;} 

#txp_bottom a{color:black;}

</style>
</head>
<body>
<a name="pagetop"></a>
<div id="txp_homemanu">
<div>・<a href="http://www.21tx.com" target="_top">天新网首页</a>・<a href="javascript:void(0)" onClick="txAddBookmark(document.title)" target="_top">加入收藏</a>・<a href="javascript:void(0)" onclick="txSetHome(this,window.location)" target="_top">设为首页</a></div>
</div>

<div id="txp_mainmanu">
<div id="txp_mainmanulogo"><a href="http://www.21tx.com/" target="_top"><img src="http://www.21tx.com/images/logo130.gif" alt="天新网" width="130" border="0"></a></div>
<div id="txp_mainmanutext">
<a href="http://www.21tx.com/" target="_top">首页</a>|<a href="http://www.21tx.com/notebook/" target="_top">笔记本</a>|<a href="http://mobile.21tx.com/" target="_top">手机</a>|<a href="http://www.21tx.com/dc/" target="_top">数码相机</a>|<a href="http://www.21tx.com/dv/" target="_top">摄像机</a>|<a class="letter_l" href="http://www.21tx.com/mp3/" target="_top">MP3</a>/<a class="letter_r" href="http://digi.21tx.com/mp4/" target="_top">MP4</a>|<a href="http://diy.21tx.com/mainboard/" target="_top">主板</a>|<a href="http://diy.21tx.com/memory/" target="_top">内存</a>|<a href="http://diy.21tx.com/vga/" target="_top">显示器</a>|<a href="http://www.21tx.com/oa/" target="_top">办公</a>|<a href="http://www.21tx.com/oa/print/" target="_top">打印机</a>|<a href="http://dl.21tx.com/" target="_top">下载</a>|<a href="http://dev.21tx.com/" target="_top">开发</a>|<a href="http://auto.21tx.com/" target="_top">汽车</a>|<a href="http://school.21tx.com/" target="_top">学院</a>|<a href="http://news.21tx.com/" target="_top">业界</a><br />
<a href="http://diy.21tx.com/" target="_top">硬件</a>|<a href="http://www.21tx.com/deskpc/" target="_top">台式机</a>|<a href="http://digi.21tx.com/" target="_top">数码</a>|<a href="http://www.21tx.com/digihome/" target="_top">数字家庭</a>|<a href="http://www.21tx.com/oa/projector/" target="_top">投影仪</a>|<a class="letter_l" href="http://digi.21tx.com/gps/" target="_top">GPS</a>/<a class="letter_r" href="http://diy.21tx.com/cpu/" target="_top">CPU</a>|<a href="http://diy.21tx.com/display/" target="_top">显卡</a>|<a href="http://diy.21tx.com/hdd/" target="_top">硬盘</a>|<a href="http://www.21tx.com/server/" target="_top">服务器</a>|<a href="http://diy.21tx.com/net/" target="_top">网络</a>|<a href="http://www.21tx.com/oa/ytj/" target="_top">一体机</a>|<a href="http://drivers.21tx.com/" target="_top">驱动</a>|<a href="http://codes.21tx.com/" target="_top">源码</a>|<a href="http://games.21tx.com/" target="_top">游戏</a>|<a href="http://exam.21tx.com/" target="_top">考试</a>|<a href="http://prod.21tx.com/" target="_blank">报价</a>
</div>
</div>

<div id="txa_top">
<div id="txa_top728">
<script type="text/javascript"><!--
google_ad_client = "pub-8537598168120506";
google_alternate_color = "FFFFFF";
google_ad_width = 728;
google_ad_height = 90;
google_ad_format = "728x90_as";
google_ad_type = "image";
//2007-11-18: 首页图片横幅
google_ad_channel = "0979501092";
//-->
</script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div id="txa_topnews">
<div id="txa_topnewstext"><script>txShowMenuNews();</script></div>
</div>
</div>

<div id="txp_chanmanu" style="background:url(http://www.21tx.com/images/chan/dev_manubg.gif);">
<div id="txp_chanmanulogo"><img src="http://www.21tx.com/images/chan/dev_manu.gif" width="195" height="55" border="0"></div>
<div id="txp_chanmanutext" style="background:url(http://www.21tx.com/images/chan/dev_manubg.gif);">
<div id="txp_chanmanutexta"><a href="http://dev.21tx.com/">开发首页</a> | <a href="http://dev.21tx.com/language/">开发语言</a> | <a href="http://dev.21tx.com/dotnet/">.Net开发</a> | <a href="http://dev.21tx.com/java/">Java开发</a> | <a href="http://dev.21tx.com/web/">Web开发</a> | <a href="http://dev.21tx.com/database/">数据库开发</a> | <a href="http://dev.21tx.com/mobile/">移动开发</a> | <a href="http://dev.21tx.com/game/">游戏开发</a> | <a href="http://dev.21tx.com/corp/">企业开发</a> | <a href="http://dev.21tx.com/os/">操作系统</a> | <a href="http://dev.21tx.com/softengine/">软件工程</a></div>
<div id="txp_chanmanutextb"><p><a href="http://dev.21tx.com/language/vb/">VB</a> <a href="http://dev.21tx.com/language/vc/">VC</a> <a href="http://dev.21tx.com/language/delphi/">Delphi</a> <a href="http://dev.21tx.com/language/pb/">PB</a> <a href="http://dev.21tx.com/language/bcb/">BCB</a> <a href="http://dev.21tx.com/language/c/">C++</a> - 
<a href="http://dev.21tx.com/dotnet/aspnet/">ASP.net</a> <a href="http://dev.21tx.com/dotnet/csharp/">C#</a> <a href="http://dev.21tx.com/dotnet/vbnet/">VB.net</a> - 
<a href="http://dev.21tx.com/java/j2ee/">J2EE</a> <a href="http://dev.21tx.com/java/j2se/">J2SE</a> <a href="http://dev.21tx.com/java/j2me/">J2ME</a> <a href="http://dev.21tx.com/java/ejb/">EJB</a> - 
<a href="http://dev.21tx.com/web/asp/">ASP</a> <a href="http://dev.21tx.com/web/php/">PHP</a> <a href="http://dev.21tx.com/java/jsp/">JSP</a> <a href="http://dev.21tx.com/web/cgi/">CGI</a> - 
<a href="http://dev.21tx.com/database/mssql/">MSSQL</a> <a href="http://dev.21tx.com/database/oracle/">Oracle</a> <a href="http://dev.21tx.com/database/db2/">DB2</a> <a href="http://dev.21tx.com/database/mysql/">MySQL</a> - <a href="http://dev.21tx.com/codinglife/">CodingLife</a></p></div>
</div>
</div>

<div style="width:960px;margin:0 auto;border-left:#cccccc 1px solid;border-right:#cccccc 1px solid;border-bottom:#cccccc 1px solid;">
<script type='text/javascript'> 
cpro_client='txadcpr';
cpro_at='text_image'; 
cpro_161=4; 
cpro_flush=2; 
cpro_w=960; 
cpro_h=90; 
cpro_template='text_default_960_90'; 
cpro_cbd='#FFFFFF'; 
cpro_cbg='#FFFFFF'; 
cpro_ctitle='#0000ff'; 
cpro_cdesc='#444444'; 
cpro_curl='#008000'; 
cpro_cflush='#e10900'; 
cpro_uap=1;
cpro_cad=1;
cpro_channel=917;
</script>
<script language='JavaScript' type='text/javascript' src='http://cpro.baidu.com/cpro/ui/cp.js'></script>
</div>

<div id="txp_main">
<div id="txp_left">
<div id="txp_location">您现在的位置：<a href="http://www.21tx.com/">天新网</a> > <a href="http://dev.21tx.com/">软件开发</a> > <a href="http://dev.21tx.com/wz/">开发文摘</a> > <a href="http://dev.21tx.com/java/adv/wz/">Java文摘</a></div>
<div id="txp_title">《XDoclet in Action》部分章节中文版</div>
<div id="txp_from">http://dev.21tx.com 2005年06月17日 <font>Blog zmxj</font></div>
<p align="center" style="padding-top:20px;padding-bottom:10px;">
<script type="text/javascript"><!--
google_ad_client = "pub-8537598168120506";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text_image";
//2007-11-15: 文章内容上部
google_ad_channel = "8051432807";
google_color_border = "336699";
google_color_bg = "FFFFFF";
google_color_link = "0000FF";
google_color_text = "000000";
google_color_url = "008000";
google_ui_features = "rc:10";
//-->
</script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</p>
<div id="txp_content"><div id="clickeye_content"><span id="txsite_ad_cnt_start"></span><p>转自：<a href="http://www.javaresearch.org/article/showarticle.jsp?column=331&amp;thread=26106">http://www.javaresearch.org/article/showarticle.jsp?column=331&amp;thread=26106</a></p><p>XDoclet起步<br/><br/>XDoclet是一个代码生成工具，它可以把你从<a href="http://dev.21tx.com/java/" target="_blank">Java</a>开发过程中繁重的重复劳动中解脱出来。XDoclet可以让你的应用系统开发的更加快速，而你只要付比原先更少的努力。你可以把你手头上的冗长而又必需的代码交给它帮你完成，你可以逃脱&ldquo;deployment&nbsp;descriptor地狱&rdquo;，你还可以使你的应用系统更加易于管理。而你所要做的，只不过是在你的注释里，多加一些类javadoc属性。然后，你会惊讶于XDoclet为了做到的一切。<br/>讨论XDoclet，有一点比较容易产生混淆，那就是XDoclet不但是一系统的代码生成应用程序，而且它本身还是一个代码生成框架。虽然每个应用系统的细节千变万化（比如<a href="http://dev.21tx.com/java/ejb/" target="_blank">EJB</a>代码生成和<a href="http://dev.21tx.com/java/struts/" target="_blank">Struts</a>代码生成是不一样的，而JMX代码生成又是另一番景象），但这些代码生成的核心概念和用法却是类似的。<br/>在这一章里，我们将会看到渗透到所有XDoclet代码生成程序当中的XDoclet框架基础概念。但在之前，我们先从一个例子入手。<br/><br/>2.1&nbsp;XDoclet&nbsp;in&nbsp;action<br/><br/>每一个程序员都会认识到，他们的程序永远也不会完成。总会有另一些的功能需要添加，另一些的BUG需要修正，或者需要不断的进行重构。所以，在代码里添加注释，提醒自己（或者其他的程序员）有哪些任务需要完成已成为一个共识。<br/>如何来跟踪这些任务是否完成了呢？理想情况下，你会收集整理出来一个TODO任务列表。在这方面，XDoclet提供了一个强大的TODO生成器，来帮助你完成这个任务。这是一个把XDoclet引入项目的好机会。<br/>2.1.1&nbsp;一个公共的任务<br/>假设你正在开发一个使用了勺子的类。<br/>public&nbsp;class&nbsp;Matrix&nbsp;{<br/>　　//&nbsp;TODO&nbsp;?&nbsp;需要处理当没有勺子的情况<br/>　　public&nbsp;void&nbsp;reload()&nbsp;{<br/>　　　　//&nbsp;...<br/>　　　　Spoon&nbsp;spoon&nbsp;=&nbsp;getSpoon();<br/>　　　　//&nbsp;...<br/>　　}<br/>}<br/>理想情况下，你在下一次阅读这段代码的时候，你会处理这个&ldquo;空勺子&rdquo;(null&nbsp;spoon)的问题。但如果你过了很久才回来看这段代码，你还会记得在这个类里还有一些工作要做吗？当然，你可以在你的<a href="http://www.21tx.com/src/" target="_blank">源码</a>里全局搜索TODO，甚至你的集成开发环境有一个内建的TODO列表支持。但如果你想把任务所在的类和方法也标注出来的话，XDoclet可以是另一种选择。XDoclet可以为你的项目生成一个TODO报表。<br/><br/>2.1.2&nbsp;添加XDoclet标签<br/>为了把你的TODO项目转换成另一种更加正式的格式，你需要对代码进行一些细微的改动。如下所示：<br/>public&nbsp;class&nbsp;Matrix&nbsp;{<br/>　　/**&nbsp;@todo&nbsp;需要处理当没有勺子的情况&nbsp;*/<br/>　　public&nbsp;void&nbsp;reload()&nbsp;{<br/>　　　　//&nbsp;...<br/>　　}<br/>}<br/>这里加入了一个XDoclet需要的类javadoc标签。XDoclet会使用这些标签标记的信息，以及在这种情况下标签所处的类和方法，来生成TODO报表。<br/><br/>2.1.3&nbsp;与Ant集成<br/>要生成TODO报表，你需要确保在你的机器上正确安装了XDoclet。<br/>在Ant任务里，最少要包含一个目标（例如init目标）定义&lt;documentdoclet&gt;任务，这是一个Ant自定义任务，例如：<br/>　　&lt;taskdef&nbsp;name=&rdquo;documentdoclet&rdquo;<br/>　　　　classname=&rdquo;xdoclet.modules.doc.DocumentDocletTask&rdquo;<br/>　　　　classname=&rdquo;xdoclet.lib.path&rdquo;&nbsp;/&gt;<br/>这个&lt;documentdoclet&gt;任务是XDoclet核心代码生成应用程序中的一个。<br/>现在，你可以在Ant构建文件中加入一个todo目标调用这个任务来生成TODO报表，如：<br/>　　&lt;target&nbsp;name=&rdquo;todo&rdquo;&nbsp;depends=&rdquo;init&rdquo;&gt;<br/>　　　　&lt;documentdoclet&nbsp;destdir=&rdquo;todo&rdquo;&gt;<br/>　　　　　　&lt;fileset&nbsp;dir=&rdquo;${dir.src}&rdquo;&gt;<br/>　　　　　　　　&lt;include&nbsp;name=&rdquo;**/*.java&rdquo;&nbsp;/&gt;<br/>　　　　　　&lt;/fileset&gt;<br/>　　　　　　&lt;info/&gt;<br/>　　　　&lt;/documentdoclet&gt;<br/>　　&lt;/target&gt;<br/>&lt;info&gt;子任务会遍历你的源文件，查找todo标签，并在todo子目录下生成HTML格式的TODO报表。<br/><br/>2.1.4&nbsp;创建一个更加职业化的TODO报表<br/>XDoclet生成的TODO报表可以有一个更加职业化的外表。报表会列出一个概览，显示在哪个包哪个类里有todo项（以及todo项的个数）。Todo项可以跟在方法、类和域上，从报表上可以清楚的区别它们。类级别的todo项会标注class，方法级别的todo项会在方法签名上标注M。构造函数和域相关的todo项也会进行相似的标注。<br/>这个任务看起来很简单，但考虑到你所需要做的只是在注释上添加一些格式化的@todo标签，相对于那种只有人才可以理解的无格式的松散的注释，这种标签是机器可读的，也更容易编程处理。生成的输出也更容易阅读并且更加的商业化。<br/><br/>2.2&nbsp;任务和子任务<br/>生成todo报表，只是XDoclet可以完成的事情当中的冰山一角。当初，XDoclet因为可以自动生成EJB繁杂的接口和布署描述文件而声名鹊起。然而，现在的XDoclet已经发展成了一个全功能的、面向属性的代码生成框架。<a href="http://dev.21tx.com/java/j2ee/" target="_blank">J2EE</a>代码生成只是XDoclet的一个应用方面，它可以完成的任务已经远远超越了J2EE和<a href="http://dev.21tx.com/softengine/doc/" target="_blank">项目文档</a>的生成。<br/><br/>2.2.1&nbsp;XDoclet&nbsp;任务<br/>到现在为止，我们一直在讨论使用XDoclet生成代码，但事实上，更确切的说法应该是，我们使用XDoclet的一个特定的任务来生成代码，比如&lt;ejbdoclet&gt;。每一个XDoclet任务关注于一个特定的领域，并提供这个领域的丰富的代码生成工具。<br/>[定义：任务（Tasks）是XDoclet里可用的代码生成应用程序的高层概念。]<br/>在XDoclet里，目前已有如下所示的七个核心任务。<br/>&lt;ejbdoclet&gt;：面向EJB领域，生成EJB、工具类和布署描述符。<br/>&lt;<a href="http://dev.21tx.com/web/" target="_blank">Web</a>doclet&gt;：面向Web开发，生成serlvet、自定义标签库和web框架文件。<br/>&lt;<a href="http://dev.21tx.com/java/struts/" target="_blank">Hibernate</a>doclet&gt;：Hibernate持续，配置文件、Mbeans<br/>&lt;jdodoclet&gt;：JDO，元数据，vender&nbsp;configuration<br/>&lt;jmxdoclet&gt;：JMX，MBean接口，mlets，配置文件。<br/>&lt;doclet&gt;：使用用户自定义模板来生成代码。<br/>&lt;documentdoclet&gt;：生成项目文件（例如todo列报表）<br/>这其中，&lt;ejbdoclet&gt;最常用，并且很多项目也仅仅使用XDoclet来进行EJB代码生成。&lt;webdoclet&gt;是其次一个常用的代码生成任务。当然，在一个项目中同时使用几个XDoclet任务是可能的（并且也是推荐的），但在这些任务之间是完全独立的，它们彼此之间并不能进行直接的交流。<br/><br/>2.2.2&nbsp;XDoclet子任务<br/>XDoclet的任务是领域相关的，而在某个特定领域的XDoclet任务，又由许许多多紧密耦合在一起的子任务组成的，这些子任务每个都仅仅执行一个非常特定和简单的代码生成任务。<br/>[定义：子任务（subtasks）是由任务提供的单目标的代码生成过程]<br/>任务提供子任务执行时的上下文，并且把这些相关的子任务组织管理了起来。任务会依赖这些子任务来生成代码。在一个任务当中调用多个子任务来协同完成各种各样比较大型的代码生成任务是非常常见的。比如，在开发EJB时，你可能想要为每一个bean生成一个home接口，一个remote接口以及ejb-jar.<a href="http://dev.21tx.com/web/xml/" target="_blank">XML</a>布署描述符文件。这就是在&lt;ejbdoclet&gt;任务的上下文环境中的三个独立的代码生成子任务。<br/>子任务可以随意的组合排列，以满足项目代码生成的需要。某个XDoclet任务包含的子任务经常会共享功能和在源文件中使用相同的XDoclet标签。这意味着当你开始一个任务的时候，你可以很容易的集成进一个相关的子任务，而不需要很大的改动。<br/><br/>子任务交互<br/>让我们以&lt;ejbdoclet&gt;任务为例，看一下相关的子任务之间是如何进行关联的。假设你正在开发一个CMP（容器管理持久化）实体Bean。你想要使用一些&lt;ejbdoclet&gt;的子任务：<br/>&bull;&lt;deploymentdescriptor&gt;：生成ejb-jar.xml布署描述符文件。<br/>&bull;&lt;localhomeinterface&gt;：生成local&nbsp;home接口。<br/>&bull;&lt;localinterface&gt;：生成local接口。<br/>在执行如上子任务的时候，你需要标记出你的实体Bean的CMP域。当你发布你的bean的时候，你还需要在开发商相关的布署描述符中提供某个特定的关系<a href="http://dev.21tx.com/database/" target="_blank">数据库</a>中的特定表和列与你的CMP实体Bean的映射关系。XDoclet可以让你在原先已存在的CMP&nbsp;XDoclet属性基础上再加上一些关系映射属性，然后，你就可以在任务中加入一个开发商相关的子任务（例如&lt;jboss&gt;或者&lt;weblogic&gt;）来生成布署描述符文件。XDoclet提供了几乎所有的应用<a href="http://www.21tx.com/server/" target="_blank">服务器</a>的支持，你只需要一些初始化的小改动，就可以进行这些应用服务器相关的代码生成了。<br/>但那只是冰山一角。你还可以使用&lt;entitycmp&gt;子任务为为你的bean生成一个实体bean接口的实现子类。如果你使用&lt;valueobject&gt;子任务来为了你的bean生成值对象，&lt;entityemp&gt;子任务还会为你的值对象生成方法的实现代码。<br/>觉得不可思议了吧。可惜XDoclet没有提供&lt;cupofcoffee&gt;子任务，要不然我们可以喝杯咖啡，休息一下啦。<br/>这里不是想向你介绍&lt;ejbdoclet&gt;所有的子任务或者&lt;ejbdoclet&gt;可以完成的所有代码生成功能，而仅仅是想向你展示一下任务的子任务之间是如何工作在一起的。一旦你开始并熟悉了一个XDoclet&nbsp;子任务，熟悉另一个子任务会变得非常简单-&nbsp;那种每个子任务都是孤立的相比，使用这种可以相互协作的子任务，开发成本会显著的降低，效果也更加的立竿见影。&nbsp;<br/><br/>2.3&nbsp;使用Ant执行任务<br/>XDoclet&ldquo;嫁&rdquo;给了Ant。XDoclet任务就是Ant的自定义任务，除此以外，没有其他运行XDoclet任务的方法。所幸的是，Ant已经成为了Java构建工具事实上的标准，所以这不算什么限制。事实上，反过来，XDoclet与Ant的这种&ldquo;亲密&rdquo;关系使得XDoclet可以参与到任何Ant构建过程当中去。<br/>2.3.1&nbsp;声明任务<br/>XDoclet并没有和Ant一起发布，所以如果你想要使用XDoclet的话，就需要单独的<a href="http://dl.21tx.com/" target="_blank">下载</a>和安装。在使用任何一个XDoclet的任务之前，你首先需要在使用Ant的&lt;taskdef&gt;任务来声明它。例如：<br/>&lt;taskdef&nbsp;name=&rdquo;ejbdoclet&rdquo;<br/>　　classname=&rdquo;xdoclet.modules.ejb.EjbDocletTask&rdquo;<br/>　　classpathref=&rdquo;xdoclet.lib.path&rdquo;/&gt;<br/>如果你熟悉Ant的话，你就会知道这段代码是告诉Ant加载&lt;ejbdoclet&gt;的任务定义。当然，你也可以以你喜欢的任何方式来命名这个自定义任务，但最好还是遵守标准的命名规律以免发生混淆。classname和classpathref属性告诉Ant到哪里去找实现这个自定义任务的XDoclet类。如果你想使用其他的XDoclet任务，就必须要类似这样首先声明这个任务。<br/>一般共通的做法是，把所有需要使用的XDoclet任务都放在Ant的一个目标里声明，这样在其他的目标里如果需要使用这些任务，只要depends这个任务就可以了。你可能已经在Ant的构建文件里包含了init目标，这就是放置XDoclet任务声明的好地方（当然如果你没有，你也可以建一个）。下面的例子就是在一个init目标里加入了&lt;ejbdoclet&gt;和&lt;webdoclet&gt;的声明：<br/>&lt;target&nbsp;name=&rdquo;init&rdquo;&gt;<br/>　　&lt;taskdef&nbsp;name=&rdquo;documentdoclet&rdquo;<br/>　　　　classname=&rdquo;xdoclet.modules.doc.DocumentDocletTask&rdquo;<br/>　　　　classpathref=&rdquo;xdoclet.lib.path&rdquo;&nbsp;/&gt;<br/>　　　　&lt;taskdef&nbsp;name=&rdquo;ejbdoclet&rdquo;<br/>　　　　　　classname=&rdquo;xdoclet.modules.ejb.EjbDocletTask&rdquo;<br/>　　　　　　classpathref=&rdquo;xdoclet.lib.path&rdquo;&nbsp;/&gt;<br/>　　　　&lt;taskdef&nbsp;name=&rdquo;webdoclet&rdquo;<br/>　　　　　　classname=&rdquo;xdoclet.modules.web.WebDocletTask&rdquo;<br/>　　　　　　classpathref=&rdquo;xdoclet.lib.path&rdquo;&nbsp;/&gt;<br/>&lt;/target&gt;<br/>现在，任务声明好了，XDoclet&ldquo;整装待发&rdquo;。<br/><br/>2.3.2&nbsp;使用任务<br/>你可以在任何目标里使用声明好的任务。在任务的上下文环境里，可以调动相关的子任务。让我们看一个例子，这个例子调用了&lt;ejbdoclet&gt;任务。不要担心看不懂语法的细节，现在你只需要关心一些基础概念就可以了。<br/>&lt;target&nbsp;name=&rdquo;generateEjb&rdquo;&nbsp;depends=&rdquo;init&rdquo;&gt;<br/>　　&lt;ejbdoclet&nbsp;destdir=&rdquo;${gen.src.dir}&rdquo;&gt;<br/>　　　　&lt;fileset&nbsp;dir=&rdquo;${src.dir}&rdquo;&gt;<br/>　　　　　　&lt;include&nbsp;name=&rdquo;**/*Bean.java&rdquo;/&gt;<br/>　　　　&lt;/fileset&gt;<br/>　　&lt;deploymentdescriptor&nbsp;destdir=&rdquo;${ejb.deployment.dir}&rdquo;/&gt;<br/>　　&lt;homeinterface/&gt;<br/>　　&lt;remoteinterface/&gt;<br/>　　&lt;localinterface/&gt;<br/>　　　&lt;localhomeinterface/&gt;<br/>　　&lt;/ejbdoclet&gt;<br/>&lt;/target&gt;<br/>把任务想像成一个子程序运行时需要的一个配置环境（记住，子任务才是真正进行代码生成工作的）。当调用一个子任务时，子任务从任务继承上下文环境，当然，你也可以根据需要随意的覆盖这些值。在上面的例子里，因为&lt;deploymentdescriptor&gt;子任务生成的布署描述符文件和其他生成各种接口的子任务生成的Java源文件需要放在不同的位置，所以覆盖了destdir的属性值。布署描述符文件需要放在一个在打包EJB&nbsp;JAR文件的时候可以容易包含进来的地方，而生成的Java代码则需要放置在一个可以调用Java编译器进行编译的地方。需要这些子任务之间是紧密关联的，但只要你需要，你可以有足够的自主权控制任务的生成环境。<br/>&lt;fileset&gt;属性同样被应用到所有的子任务。这是一个Ant的复杂类型（相对于文本和数值的简单类型），所以以子元素的方式在任务中声明。不要把它和子任务混为一谈。当然，如果你想在某个子任务中另外指定一个不同的输入文件集，你也可以在这个子任务中放置一个&lt;fileset&gt;子元素来覆盖它。<br/>子任务的可配置选项远远不止这些。我们会在下一章继续介绍所有的任务和子任务，以及常用的配置选项。<br/><br/>2.4&nbsp;用属性标注你的代码<br/>可重用的代码生成系统需要输入来生成感兴趣的输出。一个解析器生成器也需要一个语言描述来解析生成解析器。一个商务对象代码生成器需要领域模型来知道要生成哪些商务对象。XDoclet则需要Java源文件做为输出来生成相关的类或者布署/配置文件。<br/>然而，源文件可能并没有提供代码生成所需要的所有信息。考虑一个基于<a href="http://dev.21tx.com/java/jsp/" target="_blank">Servlet</a>的应用，当你想生成web.xml文件的时候，servlet源文件仅可以提供类名和适当的servlet接口方法。其他的信息比如URI&nbsp;pattern映射、servlet需要的初始化参数等信息并没有涵盖。显而易见，如果class并没有提供这些信息给你，你就需要自己手动在web.xml文件时填写这些信息。<br/>XDoclet当然也不会知道这些信息。幸运的是，解决方法很简单。如果所需信息在源文件时没有提供，那就提供它，做法就是在源文件里加入一些XDoclet属性。XDoclet解析源文件，提取这些属性，并把它们传递给模板，模板使用这些信息生成代码。<br/><br/>2.4.1&nbsp;剖析属性<br/>XDoclet属性其实就是javadoc的扩展。它们在外表上和使用上都有javadoc属性一样，可以放置在javadoc文档注释里。文档注释以/**开始，*/结尾。下面是一个简单的例子：<br/>/**<br/>*&nbsp;这是一段javadoc注释。<br/>*&nbsp;注释可以被分解成多行，每一行都以星号开始。<br/>*/<br/>在注释里的所有文本都被视为javadoc注释，并且都能够被XDoclet访问到。注释块一般都与Java源文件中的某个实体有关，并紧跟在这个实体的前面。没有紧跟实体的注释块将不会被处理。类（或者接口）可以有注释块，方法和域也可以有自己的注释块，比如：<br/>/**<br/>*&nbsp;类注释块<br/>*/<br/>public&nbsp;class&nbsp;SomeClass&nbsp;{<br/>　　/**&nbsp;域注释块&nbsp;*/<br/>　　private&nbsp;int&nbsp;id;<br/>　　/**<br/>*&nbsp;构造函数注释块<br/>*/<br/>　　public&nbsp;SomeClass()&nbsp;{<br/>　　　　//&nbsp;...<br/>　　}<br/>　　/**<br/>　　&nbsp;*&nbsp;方法注释块<br/>　　&nbsp;*/<br/>　　public&nbsp;int&nbsp;getId()&nbsp;{<br/>　　　　return&nbsp;id;<br/>　　}<br/>}<br/>注释块分成两部分：描述部分和标签部分。当遇到第一个javadoc标签时，标签部分开始。Javadoc标签也分成两部分：标签名和标签描述。标签描述是可选的，并且可以多行。例如：<br/>/**<br/>*&nbsp;这是描述部分<br/>*&nbsp;@tag1&nbsp;标签部分从这里开始<br/>*&nbsp;@tag2<br/>*&nbsp;@tag3&nbsp;前面一个标签没有标签描述。<br/>*&nbsp;这个标签有多行标签描述。<br/>*/<br/>XDoclet使用参数化标签扩展了javadoc标签。在XDoclet里，你可以在javadoc标签的标签描述部分加入name=&rdquo;value&rdquo;参数。这个微小的改动大大增强了javadoc标签的表达能力，使得javadoc标签可以用来描述复杂的元数据。下面的代码显示了使用XDoclet属性描述实体Bean方法：<br/>/**<br/>*&nbsp;@ejb.interface-method<br/>*&nbsp;@ejb.relation<br/>*&nbsp;name=&rdquo;blog-entries&rdquo;<br/>*&nbsp;role-name=&rdquo;blog-has-entries&rdquo;<br/>*&nbsp;@ejb.value-object<br/>*&nbsp;compose=&rdquo;com.xdocletbook.blog.value.EntryValue&rdquo;<br/>*&nbsp;compose-name=&rdquo;Entry&rdquo;<br/>*&nbsp;members=&rdquo;com.xdocletbook.blog.interfaces.EntryLocal&rdquo;<br/>*&nbsp;members-name=&rdquo;Entries&rdquo;<br/>*&nbsp;relation=&rdquo;external&rdquo;<br/>*&nbsp;type=&rdquo;java.util.Set&rdquo;<br/>*/<br/>public&nbsp;abstract&nbsp;Set&nbsp;getEntries();<br/>参数化标签允许组合逻辑上相关联的属性。你可以加入描述这个类的元信息，使得这个类的信息足够生成代码。另外，程序员借由阅读这样的元信息，可以很快的理解这个类是如何使用的。（如果这个例子上的元信息你看不懂，不要担心，在第4章里，我们会学到EJB相关的标签以及它们的涵意。）<br/>另外，请注意上面的例子中，所有的标签名都以ejb开头。XDoclet使用namespace.tagname的方式给标签提供了一个命名空间。这样做除了可以跟javadoc区别开来以外，还可以把任务相关的标签组织起来，以免任务之间的标签产生混淆。&nbsp;<br/><br/>2.5&nbsp;代码生成模式<br/>XDoclet是一种基于模板的代码生成引擎。从高层视图上来看，输出文件其实就是由解析执行各式各样的模板生成出来的。如果你理解了模板以及它所执行的上下文环境，就可以确切的认识到，XDoclet可以生成什么，不可以生成什么。如果你正在评估XDoclet平台，理解这些概念是非常重要的。要不然，你可能会错过XDoclet的许多强大的功能，也可能会被XDoclet的一些限制感到迷惑。<br/>XDoclet运行在在Ant构建文件环境中，它提供了Ant自定义任务和子任务来与XDoclet引擎交互。任务是子任务的容器，子任务负责执行代码生成。子任务调用模板。模板提供了你将生成代码的饼干模子。XDoclet解析输入的源文件，提取出源文件中的XDoclet属性元数据，再把这些数据提供给模板，<a href="http://drivers.21tx.com/" target="_blank">驱动</a>模板执行。除此之外，模板还可以提供合并点(merge&nbsp;points)，允许用户插入一些模板片断(合并文件merge&nbsp;files)来根据需要定制代码生成。<br/>2.5.1&nbsp;模板基础<br/>XDoclet使用代码模板来生成代码。模板(template)是你想生成文件的原型。模板里使用一些XML标签来指导模板引擎如何根据输入类以及它们的元数据来调整代码的生成。<br/>[定义：模板(template)是生成代码或描述文件的抽象模视图。当模板被解析的时候，指定的细节信息会被填入。]<br/>模板一般情况下会有一个执行环境。模板可能应用在一个类环境(转换生成transform&nbsp;generation)，也有可能应用在一个全局环境(聚集生成aggregate&nbsp;generation)。转换生成和聚集生成是XDoclet的两种类型的任务模式，理解它们之间的区别对于理解XDoclet是非常重要的。<br/>当你使用XDoclet生成布置描述符文件时，你使用的是聚集生成。布置描述符文件并不仅仅只与一个类相关，相反，它需要从多个类里聚集信息到一个输入文件。在这种生成模式里，解析一次模板只会生成一个输出文件，不管有多少个输入文件。<br/>在转换生成模式里，模板遇到每一个源文件就会解析一次，根据该文件类的上下文环境生成输出。这种生成模式会为每一个输入文件生成一个输出文件。<br/>转换生成模式的一个很好的例子是生成EJB的local和remote接口。显然，接口是和Bean类一一相关的。从每一个类里提取信息(类以及它的方法、域、接口以及XDoclet属性等信息)转换出接口。除此以外，不需要其他的信息。<br/>从实现里提取出接口似乎有点反向。如果你手写程序的话，一般来说会先定义一个接口，然后再写一个类来关现它。但XDoclet做不到，XDoclet不可能帮你实现一个已有接口，因为它不可能帮你生成你的业务逻辑。当然，如果业务逻辑可以从接口本身得到(比如JavaBean的get/set访问器)或者使用XDoclet属性声明好，那么生成业务逻辑代码来实现一个接口也不是不可能。但一般情况下，这样做不太现实。相比而言，提供一个实现，并描述接口与这个实现之间的关联就容易多了。<br/>聚集生成和转换生成主要区别在它们的环境信息上。即使一个代码生成任务中生成一个Java文件，一般也不常用聚集生成，因为生成一个Java类还需要一些重要信息如类所处的包以及你想生成的类名，在这种环境下是无法提供的。如果一定要使用聚集生成的话，那就需要在另一个单独的地方提供好配置信息了。<br/>2.5.2&nbsp;模板标签<br/>在还没见到模板长啥样子之前，我们已经比较深入的认识它了。那模板文件究竟长啥样子呢？它有点像<a href="http://dev.21tx.com/java/jsp/" target="_blank">JSP</a>文件。它们都包含文件和XML标签，生成输出文件时XML标签会被解析，然后生成文本并显示在XML标签所处的位置上。除了以XDt为命名空间打头的XML标签会被XDoclet引擎解析以外，其余的XML标签XDoclet会忽略不管。下面的代码片断显示了XDoclet模板的&ldquo;经典造型&rdquo;：<br/>　　public&nbsp;class<br/>　　　　&lt;XDtClass:classOf&gt;&lt;XDtEjbFacade:remoteFacadeClass/&gt;&lt;/XDtClass:classOf&gt;<br/>　　　　Extends&nbsp;Observabe&nbsp;{<br/>　　　　static&nbsp;&lt;XDtClass:classOf&gt;&lt;XDtEjbFacade:remoteFacadeClass/&gt;&lt;/XDtClass:classOf&gt;<br/>　　　　　　_instance&nbsp;=&nbsp;null;<br/>　　　　public&nbsp;static&nbsp;&lt;XDtClass:classOf&gt;&lt;XDtEjbFacade:remoteFacadeClass/&gt;&lt;/XDtClassOf&gt;<br/>　　　　　　getInstance()&nbsp;{<br/>　　　　　　if&nbsp;(_instance&nbsp;==&nbsp;null)&nbsp;{<br/>　　　　　　　　_instance&nbsp;=<br/>new&nbsp;&lt;XDtClass:classOf&gt;&lt;XDtEjbFacade:remoteFacadeClass/&gt;<br/>　　　　　　　　　　&lt;/XDtClass:classOf&gt;();<br/>　　　　　　｝<br/>　　　　　　return&nbsp;_instance;<br/>}<br/>}<br/>研究一下这个模板，你会发现，它生成的是一个类定义。这个类里定义了一个静态变量instance，并且使用一个静态方法来控制这个静态文件的访问。借助Java语法，你可以很容易的推断出那些XDoclet模板标签的目录是生成类名，虽然对于这个标签如何工作你还并不是很了解。<br/>即使你从没打算过要自己写模板，但理解模板是如何被解析运行的还是很有必要的。迟早你会调用到一个运行失败的XDoclet任务，没有产生你所期望的输出，那么最快捷的找出原因的方法就是直接检查模板文件，看看是哪里出了问题。<br/>让我们看一下生成静态域定义的片断：<br/>static&nbsp;&lt;XDtClass:classOf&gt;&lt;XDtEjbFacade:remoteFacadeClass/&gt;&lt;/XDtClass:classOf&gt;<br/>　　　　_instance&nbsp;=&nbsp;null;<br/>在XDoclet的眼里，这段模板代码很简单，那就是：<br/>　　static&nbsp;&lt;tag/&gt;&nbsp;_instance&nbsp;=&nbsp;null;<br/>XDoclet解析执行标签，如果有输出的话，把输入置回到文本里去。有些标签会执行一些运算，把输出放回到一个流里。这样的标签称之为内容标签(content&nbsp;tags)，因为它们产生内容。<br/>另一种类型的标签称之为BODY标签。BODY标签在开始和结束标签之间存在文本。而BODY标签强大就强大在这些文本自己也可以是一断可以由外围标签解析的模板片断。比如在上面的例子里，XDtClass:classOf标签，它们的内容就是模板片断：<br/>　　&lt;XDtEjbFacade:remoteFacadeClass/&gt;<br/>classOf标签解析这段模板，提取出全限制的内容，然后剃除前面的包面，只输出类名。BODY标签并不总是会解析它的内容，在做这件事之前，它们会事先检查一些外部判断条件(比如检查检查你正在生成的是一个接口还是一个类)。这里标标签称之为条件标签(conditional&nbsp;tags)。还有一些BODY标签提供类似迭代的功能，它的内容会被解析多次。比如一个标签针对类里的每一个方法解析一次内容。<br/>XDoclet标签提供了许多高层次的代码生成功能，但是有时候，它们可能显得不够灵活，或者表达能力满足不了你的需要。这时候，相对于另外开发一套通用功能的模板引擎相比，你可以选择扩展XDoclet模板引擎。你可以使用更具表述能力、功能更加强大的Java平台开发你自己的一套标签。&nbsp;<br/><br/>2.6&nbsp;使用合并定制<br/>代码生成系统之所以使用的不多，主要原因就在于它们往往只能生成一些死板的、不够灵活的代码。大多数代码生成系统不允许你改动它们生成的代码；如果，如果这个系统不够灵活，你所能做到的最好的扩展就是应用继承扩展生成的代码，或者使用一些共通的设计模式(比如Proxy和Adaptor)来满足你的需要。无论如此，这都不是产生你想生成的代码的好办法。代码生成器最好能做到所生成即所得WYGIWYG(what&nbsp;you&nbsp;generate&nbsp;is&nbsp;what&nbsp;you&nbsp;get)，来取代你需要花费大量的时间来粉饰生成出来的并不满足要求的代码。所以，对于代码生成器来说，支持灵活的定制，是生成能够完全满足要求的代码的前提条件。<br/>XDoclet通过合并点(merge&nbsp;points)支持定制??合并点是在模板文件定义里允许运行时插入定制代码的地方。有时候，合并点甚至可以影响到全局代码的生成，不但允许你添加一些定制内容，还可以从根本上改变将要生成出来的东西。<br/>[定义：合并点(Merge&nbsp;points)是模板预先定义的允许你在代码生成的运行时加入定制内容的扩展点]<br/>让我们研究一段从XDoclet源代码里摘取出来的模板代码。在为实体Bean生成主键的模板末尾，定义了这样一个合并点：<br/>　　&lt;XDtMerge:merge&nbsp;file=&rdquo;entitypk-custom.xdt&rdquo;&gt;&lt;/XDtMerge:merge&gt;<br/>如果你在你的merge目录下创建了一个名为entitypk-custom.xdt文件，那么这个模板文件的内容将会在这个合并点被包含进来。你的定制可以执行高层模板可以执行的所有强大功能，可以进行所有模板可以进行的运算(包括定义自定义标签，定义它们自己的合并点)。<br/>上面的这种合并点，为所有的类环境使用了同一个文件。当然，也可以为每一个类环境使用不同的合并文件。如果你不想定制全部的类文件，或者你不想为了某些改动而重写模板的时候，这会很有用。不管动机是什么，逐类的合并点很容易识别出来：他们会在名字里包含一个XDoclet的逐类标记{0}。这里有一个生成ejb-jar.xml文件里的安全角色引用的例子：<br/>　　&lt;XDtMerge:merge&nbsp;file=&rdquo;ejb-sec-rolerefs-{0}.xml&rdquo;&gt;<br/>　　　　&lt;XDtClass:forAllClassTags&nbsp;tagName=&rdquo;ejb:security-role-ref&rdquo;&gt;<br/>　　　　　　&lt;security-role-ref&gt;<br/>　　　　　　　　&lt;role-name&gt;<br/>&lt;XDtClass:classTagValue<br/>tagName=&rdquo;ejb:security-roleref&rdquo;<br/>paramName=&rdquo;role-name&rdquo;/&gt;<br/>　　　　　　　　&lt;/role-name&gt;<br/>　　　　　　　　&lt;role-link&gt;<br/>　　　　　　　　　　&lt;XDtClass:classTagValue<br/>　　　　　　　　　　　　tagName=&rdquo;ejb:security-roleref&rdquo;<br/>　　　　　　　　　　　　paramName=&rdquo;role-link&rdquo;/&gt;<br/>　　　　　　　　&lt;/role-link&gt;<br/>　　　　　　&lt;/security-role-ref&gt;<br/>　　　　&lt;/XDtClass:forAllClassTags&gt;<br/>　　&lt;/XDtMerge:merge&gt;<br/>这段模板会遍历工程里的所有Bean。对于每一个Bean，XDoclet先从Bean的文件名里提取出Bean名，然后替换{0}，再根据替换后的文件名去寻找合并文件。例如，如果你有一个名为BlogFacadeBean的Bean，XDoclet会尝试寻找一个名为ejb-src-rolerefs-BlogFacade.xml的合并文件。<br/>如果找不到这个合并文件，则这个&lt;merge&gt;标签的内容模板会被解析。这意味着合并点不仅可以提供定制内容，还可以在一个模板文件里定义一个替换点，当定制内容不存在的时候使用替换点里的内容。不是所有的XDoclet任务都提供了有替换内容的合并点，一般来说，它们更倾向于只提供一个简单的合并点，仅仅当合并文件存在的时候解析并导入合并文件的内容。这取决于任务的开发者觉得哪种合并点更符合他的要求。<br/>还有一点没有介绍到的是XDoclet如何定位合并文件，每一个XDoclet任务或者子任务都会提供一个mergeDir属性，这个属性用于设置你存放合并文件的目录。&nbsp;<br/></p><P><a href=11412.html>上一篇： SWT/JFace开发入门指南（九）</a><br>
<a href=11404.html>下一篇： J2ME学习过程中的一点心得整理（参考：java手机/PDA程序设计入门 王森）</a></P>
</div></div>

<p align="center"><a href="http://altfarm.mediaplex.com/ad/ck/10592-62013-23411-9" target="_blank"><span style="font-size: 14px;font-weight: bold;"><font color=red>英特尔 酷睿(TM)2双核,送指纹识别器一个，再赠两份好礼，请电800-858-2418</a></font></span></p>

<div align="left" style="padding-left:20px;padding-top:20px;padding-bottom:20px;">
<script type='text/javascript'> 
cpro_client='txadcpr';
cpro_cbd='#trans'; 
cpro_cbg='#trans'; 
cpro_ctitle='#0000ff'; 
cpro_cdesc='#444444'; 
cpro_curl='#008000'; 
cpro_cflush='#e10900'; 
cpro_at='text_image'; 
cpro_161=4; 
cpro_flush=2; 
cpro_uap=1; 
cpro_w=500; 
cpro_h=200; 
cpro_template='text_default_500_200'; 
cpro_channel=919;
</script>
<script language='JavaScript' type='text/javascript' src='http://cpro.baidu.com/cpro/ui/cp.js'></script>
</div>

<script language="JavaScript">
txShowCopyText()
txShowPageBtmBtn();
</script>

<div id="txp_relating">
<dl>
<dt>相关内容</dt>
<dd><ul> 
<li><a href="http://dev.21tx.com/2005/06/15/11971.html" target="_blank">Display XML in AxSHDocVw.AxWebBrowser</a> 2005-06-15</li>
<li><a href="http://dev.21tx.com/2005/06/15/11961.html" target="_blank">Thread safe Singleton in C#</a> 2005-06-15</li>
<li><a href="http://dev.21tx.com/2005/05/29/11342.html" target="_blank">Configuring Database Access in Eclipse 3.0 with SQLExplorer</a> 2005-05-29</li>
<li><a href="http://dev.21tx.com/2005/04/29/12346.html" target="_blank">Error:ORA-01033:ORACLE initialization or shutdown in progress错误解决</a> 2005-04-29</li>
<li><a href="http://dev.21tx.com/2005/04/28/12378.html" target="_blank">what is new in c sharp 2.0--study from msdn</a> 2005-04-28</li>
<li><a href="http://dev.21tx.com/2005/04/22/28953.html" target="_blank">XML in Databases (我们学校以前2004亚洲gis年会的论文，一个韩国教授的报告）（地理信息，地图，坐标）</a> 2005-04-22</li>
<li><a href="http://dev.21tx.com/2005/04/20/36648.html" target="_blank">in Software that use java, Show  popmenu   that  have  the  function   of cut copy  past to</a> 2005-04-20</li>
<li><a href="http://dev.21tx.com/2005/04/09/11633.html" target="_blank">[学习笔记]Thinking in Java (the 2nd edition) Study Note (4)</a> 2005-04-09</li>
</ul></dd>
</dl>
</div>

</div>
<!-- left end -->
<div id="txp_right">

<div style="background-color:white;"><!-- SiteSearch Google -->
<form method="get" action="http://www.google.cn/custom" target="google_window">
<table border="0" bgcolor="#ffffff">
<tr><td nowrap="nowrap" valign="top" align="left" height="32">
<a href="http://www.google.com/">
<img src="http://www.google.com/logos/Logo_25wht.gif" border="0" alt="Google" align="middle"></img></a>
</td>
<td nowrap="nowrap">
<input type="hidden" name="domains" value="dev.21tx.com"></input>
<label for="sbi" style="display: none">输入您的搜索字词</label>
<input type="text" name="q" size="25" maxlength="255" value="" id="sbi"></input>
<label for="sbb" style="display: none">提交搜索表单</label>
<input type="submit" name="sa" value="搜索" id="sbb"></input>
</td></tr>
<tr>
<td>&nbsp;</td>
<td nowrap="nowrap">
<table>
<tr>
<td>
<input type="radio" name="sitesearch" value="" id="ss0"></input>
<label for="ss0" title="搜索网络"><font size="-1" color="#000000">Web</font></label></td>
<td>
<input type="radio" name="sitesearch" value="dev.21tx.com" checked id="ss1"></input>
<label for="ss1" title="搜索 dev.21tx.com"><font size="-1" color="#000000">dev.21tx.com</font></label></td>
</tr>
</table>
<input type="hidden" name="client" value="pub-8537598168120506"></input>
<input type="hidden" name="forid" value="1"></input>
<input type="hidden" name="channel" value="1615414527"></input>
<input type="hidden" name="ie" value="GB2312"></input>
<input type="hidden" name="oe" value="GB2312"></input>
<input type="hidden" name="safe" value="active"></input>
<input type="hidden" name="cof" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:FFFFFF;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;LH:42;LW:130;L:http://www.21tx.com/images/logo130.gif;S:http://www.21tx.com/;FORID:1"></input>
<input type="hidden" name="hl" value="zh-CN"></input>
</td></tr></table>
</form>
<!-- SiteSearch Google --></div>
<div><script type="text/javascript"><!--
google_ad_client = "pub-8537598168120506";
/* 300x250, 创建于 08-7-27 */
google_ad_slot = "7227379078";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
<div style="padding-top:8px;"><iframe id="baiduSpFrame" border="0" vspace="0" hspace="0" marginwidth="0" marginheight="0" framespacing="0" frameborder="0" scrolling="no" width="300" height="100" src="http://spcode.baidu.com/spcode/spstyle/style1524.jsp?tn=txad_sp&ctn=0&styleid=1524"></iframe></div>
<div style="padding-top:8px;"><iframe id="baiduSpFrame" border="0" vspace="0" hspace="0" marginwidth="0" marginheight="0" framespacing="0" frameborder="0" scrolling="no" width="300" height="250" src="http://spcode.baidu.com/spcode/spstyle/style2321.jsp?tn=txad_sp&ctn=0&styleid=2321"></iframe></div>
<div style="padding-top:8px;"><iframe id="baiduSpFrame" border="0" vspace="0" hspace="0" marginwidth="0" marginheight="0" framespacing="0" frameborder="0" scrolling="no" width="300" height="120" src="http://spcode.baidu.com/spcode/spstyle/style2094.jsp?tn=txad_sp&ctn=0&styleid=2094"></iframe></div>
<div style="padding-top:8px;"></div>
<a href="http://www.zzy.cn/count.php?id=71" target="_blank"><img width="300" height="250" src="http://www.21tx.com/agimg/idc/zzy_300x250.gif" border="0"></a>

<div class="txc_list_title1">热点文章</div>
<div id="txp_chanclicktop">
<p><b class="txc_topnum1">1</b><a href="http://dev.21tx.com/2004/09/20/11666.html" target="_blank">浅谈无刷新取得远程数据技术</a></p>
<p><b class="txc_topnum1">2</b><a href="http://dev.21tx.com/2004/04/02/10678.html" target="_blank">我这IT十年</a></p>
<p><b class="txc_topnum1">3</b><a href="http://dev.21tx.com/2004/04/05/10298.html" target="_blank">《编程高手箴言》读后感(1)</a></p>
<p><b class="txc_topnum1">4</b><a href="http://dev.21tx.com/2003/08/14/10083.html" target="_blank">Win32编程基础知识</a></p>
<p><b class="txc_topnum1">5</b><a href="http://dev.21tx.com/2004/05/23/10279.html" target="_blank">C#开发终端式短信的原理和方法</a></p>
<p><b class="txc_topnum1">6</b><a href="http://dev.21tx.com/2005/08/22/11801.html" target="_blank">今天也碰到了HTTP 500 Internal server err</a></p>
<p><b class="txc_topnum1">7</b><a href="http://dev.21tx.com/2006/09/02/10487.html" target="_blank">VB+Access设计图书管理系统</a></p>
<p><b class="txc_topnum1">8</b><a href="http://dev.21tx.com/2005/11/11/34575.html" target="_blank">Windows GDI和GDI+编程实例剖析</a></p>
<p><b class="txc_topnum1">9</b><a href="http://dev.21tx.com/2008/11/05/13525.html" target="_blank">Oracle数据库备份与恢复(4):RMAN(备份与恢</a></p>
<p><b class="txc_topnum1">10</b><a href="http://dev.21tx.com/2008/01/03/12925.html" target="_blank">Jsp页面实现文件上传下载</a></p>
</div>

</div>
<!-- right end -->
<div id="txp_mainend"><div></div></div>
</div>
<!-- main end -->

<div id="txp_bottom" style="width:962px;margin:0 auto;text-align:center;">
<div style="padding-top:20px;padding-bottom:5px;">
<a href="http://www.21tx.com/about/aboutus.html" target="_blank">关于我们</a> | <a href="http://www.21tx.com/about/contact.html" target="_blank">联系我们</a> | <a href="http://www.21tx.com/ad/" target="_blank">广告服务</a> | <a href="http://www.21tx.com/about/job.html" target="_blank">工作机会</a> | <a href="http://www.21tx.com/about/copyright.html" target="_blank">版权声明</a> | <a href="http://txsite.21tx.com/script/contact.aspx?subject=投稿:" target="_blank">欢迎投稿</a> | <a id="txsite_count_text" href="http://www.21tx.com/about/sitemap.html" target="_blank">网站地图</a>
</div>
<div>
Copyright &copy; 2000-2008 , <font color="#cc0000"><b>www.21tx.com</b></font> , All Rights Reserved .
</div>
<div style="padding-top:5px;padding-bottom:50px;">
晨新科技 版权所有 Created by TXSite.net
</div>
</div>

<SPAN id="txsite_ad_hzh_a" style="display:none">
<div id="txsite_ad_hzh_a1" style="width:300px;height:250px;float:left;padding-right:8px;padding-bottom:8px;">
<script type='text/javascript'> 
cpro_client='txadcpr';
cpro_cbd='#trans'; 
cpro_cbg='#trans'; 
cpro_ctitle='#0000ff'; 
cpro_cdesc='#444444'; 
cpro_curl='#008000'; 
cpro_cflush='#e10900'; 
cpro_at='text_image'; 
cpro_161=9; 
cpro_flush=2; 
cpro_81=0; 
cpro_uap=1; 
cpro_w=300; 
cpro_h=250; 
cpro_template='text_pages_300_250'; 
cpro_channel=915;
</script>
<script language='JavaScript' type='text/javascript' src='http://cpro.baidu.com/cpro/ui/cp.js'></script>
</div>
</SPAN>
<script language="JavaScript">
if (typeof(txsite_ad_cnt_start) != 'undefined') {
  txsite_ad_cnt_start.innerHTML = txsite_ad_hzh_a.innerHTML;
}
</script>

<div id='Count' style='display:none'>
<script type="text/javascript"><!--
tx_page_key = txsite_pagekey;
tx_page_location = escape(document.location);
tx_page_referrer = escape(document.referrer);
//--></script>
<script type="text/javascript"
  src="http://txsite.21tx.com/Count/Count.js">
</script>
</div>

<script src="http://www230.clickeye.cn/common/clickeye.js"></script>

<script type="text/javascript" charset="gb2312" src="http://cache.lianmeng.com/ad_show?id=1013636"></script>
</body>
</html>
<!-- TXSiteTag:PGi7U3lWTH76Fi/p0KNSiIoVZRfcxhmzKKsHERYhYKAZOOr2fYYR1p5gnKbP+2N8mnnyVG/oSTu6iEaZGSRZpTa62uVIczUQZgd2DZ7GMv4= -->