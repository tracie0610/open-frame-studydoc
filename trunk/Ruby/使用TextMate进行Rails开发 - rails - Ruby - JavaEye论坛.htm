<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-CN" dir="ltr">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <title>使用TextMate进行Rails开发 - rails - Ruby - JavaEye论坛</title>
    <meta name="description" content="这些天一直在学习TextMate，正好看到里面的DemoHelp，觉得很有用，就把它简单的翻译了一下，放在这里给需要的朋友。有什么问题请指正。 ============== 关于TextMate的传说已经流传很久了，这款MacOSX所缺失的文字编辑器在熟练的高手手里是开发Rails的最佳工具。一起来看看怎么用TextMate开发一个简单的Blog吧。 1、首先安装git，下载源码编译或者到这里下载p ..." />
    <meta name="keywords" content=" rails Ruby" />
    <link rel="shortcut icon" href="/images/favicon.ico" type="image/x-icon" />
    <link href="/rss/board/Ruby" rel="alternate" title="JavaEye论坛" type="application/rss+xml" />
    <link href="http://www.javaeye.com/stylesheets/forum.css?1244177950" media="screen" rel="stylesheet" type="text/css" />
    <script src="http://www.javaeye.com/javascripts/application.js?1239780471" type="text/javascript"></script>
      <link href="http://www.javaeye.com/javascripts/syntaxhighlighter/SyntaxHighlighter.css?1201588027" media="screen" rel="stylesheet" type="text/css" />
  <script src="http://www.javaeye.com/javascripts/syntaxhighlighter/shCoreCommon.js?1238329845" type="text/javascript"></script>
<script src="http://www.javaeye.com/javascripts/hotkey.js?1238403289" type="text/javascript"></script>
            <script src="http://www.javaeye.com/javascripts/dragdrop.js?1231828836" type="text/javascript"></script>
            </head>
  <body>
    <div id="page">
      <div id="header">
        <div class="clearfix"><div id="user_nav">
      <a href="/login" class="welcome" title="登录">您还未登录 !</a>
    <a href="http://www.javaeye.com/all" style="color:red">我的应用</a>
    <a href="/login">登录</a>
    <a href="/signup" class="nobg">注册</a>
  </div>
</div>
        <div class="clearfix">
          <div id="branding">
            <a href="http://www.javaeye.com"><img alt="JavaEye3.0" src="http://www.javaeye.com/images/logo.gif?1242180259" title="JavaEye-最棒的软件开发交流社区" /></a>
          </div>
          <div id="ad">
<script type="text/javascript">
document.observe('dom:loaded',function() {$("ad").innerHTML = '<a href=\'/adverts/2\' target=\'_blank\'><img src="http://ftp.javaeye.com/public/javaeye/rubyconfleft.png" style="BORDER:1px SOLID #000000" /></a>';});
</script>
</div>
        </div>
      </div>

      <div id="content" class="clearfix">
        <div id="main">
          


          


<div class="clearfix">
  <div class="crumbs">
    <a href="/forums">论坛首页</a> <span class="arrow">&rarr;</span>
    <a href="/forums/board/Ruby">Ruby版</a> <span class="arrow">&rarr;</span>
    <a href="/forums/tag/rails">rails</a> <span class="arrow">&rarr;</span>
    <h1>使用TextMate进行Rails开发</h1>
  </div>
</div>

<div id="forum_tag_list">
  <a href='/forums/board/Ruby'>全部</a>
      <a href='/forums/tag/ruby'>ruby</a>
      <a href='/forums/tag/rails'>rails</a>
      <a href='/forums/tag/rake'>rake</a>
      <a href='/forums/tag/DSL'>DSL</a>
      <a href='/forums/tag/RJS'>RJS</a>
      <a href='/forums/tag/YAML'>YAML</a>
  </div>

<div class="actions">
  <div class="buttons"></div>
  <div class="wrapper">
    <div id="forum_advert_b0"></div>
    <div class="pagination"><span class="disabled prev_page">&laquo; 上一页</span> <span class="current">1</span> <a href="/topic/170282?page=2" rel="next">2</a> <a href="/topic/170282?page=2" class="next_page" rel="next">下一页 &raquo;</a></div>
    <div class="info">浏览 6750 次</div>
  </div>
</div>



<table id="forum_main" cellspacing="1">
  <thead>
    <tr>
      <th colspan="2" class="topic_title">
        <div class="wrapper"><span class='locked'>锁定老贴子</span> <a href="/topic/170282">主题：使用TextMate进行Rails开发</a></div>
        <div id='topic_rate_box'><strong class='highlight'>该帖已经被评为良好帖</strong></div>
      </th>
    </tr>
    <tr>
      <td class="first_col">作者</td>
      <td class="last_col">正文</td>
    </tr>
  </thead>
  <tbody id="posts">
    <tr id="p_483462">
  <td class="postauthor">
    <ul>
      <li class="name">shanghaichris</li>
      <li>等级: <img src="/images/star1.gif" alt="一星会员" title="一星会员"/></li>
      <li><a href='http://shanghaichris.javaeye.com' target='_blank'><img alt="用户头像" class="logo" src="http://www.javaeye.com/images/user-logo.gif?1194185304" title="shanghaichris的博客: shanghaichris" /></a></li>
      <li>文章: 13</li>
      <li>积分: 100</li>
      <li>来自: 上海</li>
      <li><img src='/images/status/offline.gif'/></li>
    </ul>
  </td>
  <td class="postcontent">
    <div class="postactions">
      <div class="description">发表时间：2008-03-11 </div>
      <div class="links">
        
        
      </div>
    </div>
    <div class="postbody clearfix">
      
        <div id="related_topics">相关文章: <span class="close"><a href="#" onclick="$('related_topics').hide();return false;" title="关闭">&nbsp;</a></span>
          <ul>
                            <li><a href='http://www.javaeye.com/topic/162536' title='Rolling with Rails 2.0 - The First Full Tutorial ' target='_blank'>Rolling with Rails 2.0 - The First Full Tutorial </a></li>
                              <li><a href='http://www.javaeye.com/topic/162656' title='Rolling with Rails 2.0 - Part 2' target='_blank'>Rolling with Rails 2.0 - Part 2</a></li>
                              <li><a href='http://www.javaeye.com/topic/195702' title='磨快linux下免费的小刀－gedit' target='_blank'>磨快linux下免费的小刀－gedit</a></li>
                          </ul>
            <br/><span>推荐圈子: <a href="http://EXT.group.javaeye.com" target="_blank">EXT</a></span>
            <br/><a href="/wiki/topic/170282" target="_blank">更多相关推荐</a>
          </div>
                    <script type="text/javascript">
            new Draggable("related_topics");
          </script>
        
        <p style=''>这些天一直在学习TextMate，正好看到里面的DemoHelp，觉得很有用，就把它简单的翻译了一下，放在这里给需要的朋友。有什么问题请指正。</p><p style=''> </p><p style=''>==============</p><p style=''> </p><p style=''>关于<span style=''>TextMate</span>的传说已经流传很久了，这款<span style=''>MacOSX</span>所缺失的文字编辑器在熟练的高手手里是开发Rails的最佳工具。一起来看看怎么用TextMate开发一个简单的Blog吧。</p><p style=''> </p><p style=''>1、首先安装git，下载源码编译或者到这里下载package：http://metastatic.org/text/Concern/2007/09/15/new-git-package-for-os-x/</p><p style=''>2、在Terminal中键入如下命令：</p><p style=''>cd ~/Desktop</p><p style=''>git clone git://github.com/drnic/ruby-on-rails-tmbundle.git “Ruby on Rails.tmbundle“</p><p style=''>cd “Ruby on Rails.tmbundle“</p><p style=''>git checkout --track -b two_point_ooh origin/two_point_ooh</p><p style=''>git pull</p><p style=''>3、双击桌面上的“Ruby on Rails.tmbundle“图标安装此bundle</p><p style=''>这样，Ruby on Rails 2.0 的bundle就安装到TextMate里面了</p><p style=''> </p><p style=''>下面可以开始开发一个新的应用了</p><p style=''> </p><p style=''>在终端里输入</p><p style=''> </p><pre name='code' class='ruby'>rails blogcd blogmate .</pre><p> </p><p style=''> </p><p style=''>增加一个模型</p><p style=''> </p><pre name='code' class='ruby'>ruby script/generate model Post subject:string body:text</pre><p> </p><p style=''> </p><p style=''>生成了一个新的迁移 001_create_posts.rb，包含一个方法 Create_Table</p><p style=''> </p><pre name='code' class='ruby'>create_table :posts do |t|  t.string :subject  t.text :body  t.timestampsend</pre><p> </p><p style=''> </p><p style=''>Sexy Migration的支持</p><p style=''> </p><p style=''><span style=''>把光标放在 t.text :body下面一行，输入 t. 然后按下</span><span style=''>⇥</span>（<span style=''>Tab</span>键），选择“<span style=''>Create boolean column” </span>或者按下<span style=''>0 </span>，创建一个布尔字段，然后输入 published，如果按下Tab键没有反应，看看是否选择对了Ruby on Rails的bundle（在底下状态栏里）</p><p style=''> </p><p style=''>请注意这个时候下面还有一行t. 如果需要继续输入其他字段，就可以再按下Tab键直接输入。</p><p style=''> </p><p style=''>我们现在不需要别的更多的字段了，就按下<span style=''>⌃</span><span style=''> </span><span style=''>⇧</span><span style=''> K</span>（<span style=''>Control+Shift+K</span>）把这一行删除。然后保存文件<span style=''>⌘</span><span style=''> S</span></p><p style=''> </p><p style=''>然后运行迁移，可以在命令行输入</p><p style=''> </p><p style=''> </p><pre name='code' class='ruby'>rake db:migrate</pre><p> </p><p style=''> </p><p style=''><span style=''>或者直接在编辑器里按下</span><span style=''>⌃</span> |<span style=''>（</span>Control+|<span style=''>），选择</span>“Migrate to Current”<span style=''>。</span></p><p style=''> </p><p style=''>Post Fixtures</p><p style=''> </p><p style=''>修改一下test/fixtures/post.yml</p><p style=''> </p><p style=''> </p><pre name='code' class='ruby'>published:  subject: Some article  body: A test article  published: truenonpublished:  body: Still writing this one</pre><p> </p><p style=''> </p><p style=''>在Rails2.0里，fixtures不再使用id了，后面我们可以看到怎么使用foxy fixtures来自动关联。</p><p style=''> </p><p style=''> </p><p style=''>Public blog controller</p><p style=''> </p><p style=''>创建一个控制器，可以通过命令行</p><p style=''> </p><pre name='code' class='ruby'>ruby script/generate controller blog</pre><p> </p><p style=''> </p><p style=''>或者直接在编辑器里按下<span style=''>⌃</span><span style=''> |</span>（<span style=''>Control+|</span>），选择“<span style=''>Call Generate Script”</span>，再选择“Controller”，给它起个名字叫做blog，action里不要设置任何内容。</p><p style=''> </p><p style=''><span style=''>现在打开</span>blog_controller_test.rb<span style=''>，要快速找到文件，可以按下</span><span style=''>⌘</span><span style=''> T</span><span style=''>，然后输入</span><span style=''>bct</span><span style=''>就可以找到了。</span></p><p style=''> </p><p style=''>可以看到，功能性的测试是非常清楚和简单的。</p><p style=''> </p><p style=''><span style=''>让我们开始</span><span style=''>TDD</span><span style=''>吧，先删除</span><span style=''> </span><span style='color: #223512;'>test_truth </span><span style=''>方法</span></p><p style=''> </p><p style=''>然后创建一个测试来显示<span style=''>blog</span>文章列表</p><p style=''><span style=''>输入</span>deftg</p><p style=''>然后按下<span style=''>Tab</span>键</p><p style=''>自动生成了以下代码</p><p style=''> </p><pre name='code' class='ruby'>def test_should_get_action  @model = models(:fixture_name)  get :action, :id =&gt; @model.to_param  assert_response :successend</pre><p> </p><p style=''> </p><p style=''>光标停留在action上，用index代替它，然后按下Tab键，光标选择了方法的第一行，删除它，然后按三次Tab键，删除<span style=''>:id =&gt; @model.to_param </span><span style=''>部分。再次按下Tab键，光标跳到方法的最后一行。现在的代码应该是这样的：</span></p><p style=''> </p><p style=''> </p><pre name='code' class='ruby'>def test_should_get_index  get :index  assert_response :successend</pre><p> </p><p style=''> </p><p style=''>键入 asg ，然后按下Tab键，然后键入posts,然后按下Tab键。</p><p style=''> </p><p style=''>下面，键入ass ，然后按下Tab键，输入div#posts，按下Tab键，删除余下的部分。然后连续按Tab键两次，把光标放在assert_select里面，现在代码如下</p><p style=''> </p><p style=''> </p><pre name='code' class='ruby'>assert_select 'div#posts' doend</pre><p> </p><p style=''> </p><p style=''>键入ass，按下Tab键，键入div.post，然后按下Tab两次，键入count，取代掉text。</p><p style=''>现在再按下Tab键，键入post.size，最后一次按下Tab键，删除被选中的部分。</p><p style=''> </p><p style=''>好了，现在我们的测试方法完成了</p><p style=''> </p><p style=''> </p><pre name='code' class='ruby'>def test_should_get_index  get :index  assert_response :success  assert(posts = assigns(:posts), “Cannot find @posts“)  assert_select 'div#posts' do    assert_select 'div.post', :count =&gt; posts.size  endend</pre><p> </p><p style=''> </p><p style=''><span style=''>还有一个</span>deftp<span style=''>代码片段来创建一个</span>POST<span style=''>方法的测试。很容易记住的，</span>deftg<span style=''>代表</span>define test get, deftp<span style=''>代表</span>define test post</p><p style=''> </p><p style=''>Controller actions</p><p style=''>要导航到blog_controller.rb文件，有三种选择：</p><p style=''><span style=''>1，按下</span><span style=''>⇧</span><span style=''> </span><span style=''>⌥</span><span style=''> </span><span style=''>⌘</span><span style=''> </span><span style=''>↓</span>（<span style=''>Shift+option+command+</span>下箭头），然后在弹出的菜单中选择“Controller”，</p><p style=''><span style=''>2，按下</span>⌥<span style=''> </span>⌘<span style=''> </span>↓<span style=''>（</span>option+command+<span style=''>下箭头），然后直接去</span>controller<span style=''>文件（来回切换）</span></p><p style=''><span style=''>3</span>，按下<span style=''>⌘</span><span style=''> T</span>，然后键入bc，找到那个文件。</p><p style=''> </p><p style=''>增加一个index方法</p><p style=''> </p><pre name='code' class='ruby'>def index  @posts = Post.find_all_by_published(true)end</pre><p> </p><p style=''> </p><p style=''>Action Views</p><p style=''> </p><p style=''><span style=''>要创建或者导航到一个视图，可以按下</span><span style=''>⇧</span><span style=''> </span><span style=''>⌥</span><span style=''> </span><span style=''>⌘</span><span style=''> </span><span style=''>↓</span>（<span style=''>shift+option+command+</span>下箭头），然后选择<span style=''> “View”</span>（就像上面那样），或者按下<span style=''>⌥</span><span style=''> </span><span style=''>⌘</span><span style=''> </span><span style=''>↓</span><span style=''> </span>（<span style=''>option+command+</span>下箭头）来切换控制器的方法和对应的视图。</p><p style=''><span style=''>因为没有对应的</span><span style=''>app/views/blog/index*</span>文件，所以会提示要求创建一个空白视图，默认的它会猜测文件名称为<span style=''>index.html.erb</span>，<span style=''> </span>因为方法的名字叫做<span style=''>index</span>，但是当然您可以改为其他名字。</p><p style=''><span style=''>如果您得到一个提示：</span><span style=''>blog_controller.rb does not have a view</span>，请注意先要保存控制器文件，然后在切换到视图。同时请注意，光标要在控制器方法的范围内，才能起作用。</p><p style=''> </p><p style=''>好了，我们转到刚创建的index.html.erb</p><p style=''> </p><p style=''>键入div，然后按两次Tab，把id改为post，然后再按Tab，应该是这样：</p><p style=''> </p><p style=''>&lt;div id=“posts“&gt;</p><p style=''> </p><p style=''>&lt;/div&gt;</p><p style=''> </p><p style=''>在div标签中，键入for，按下Tab，生成一个for循环，在光标处替换list为@posts,按下Tab，然后键入post，替换掉item，再按下Tab，现在光标应该在for循环里面了。</p><p style=''>键入div，然后Tab，生成了div标签，删除id，键入class='post'，再按Tab，进入了div标签里面。</p><p style=''> </p><p style=''>用control+&gt;创建一个&lt;%= %&gt;, 如果再按一下control+&gt;，就会生成&lt;% %&gt;,再按一下，会生成&lt;%- -%&gt;,再按一下就会生成&lt;%# %&gt;，如此循环往复。</p><p style=''> </p><p style=''>键入post.body</p><p style=''> </p><p style=''>实际上，我们还需要显示标题，所以在&lt;%= post.body %&gt;这一行上面（按下command+return，上箭头）,键入h3，然后按下control+&lt;，生成&lt;h3&gt;标签。键入control+&gt;，键入post.subject</p><p style=''> </p><p style=''>在下面的<span class='Apple-tab-span' style='white-space: pre;'>	</span>&lt;% else %&gt;&lt;% end %&gt; 中间，创建一个简单的标记&lt;p&gt;&lt;/p&gt;（使用control+&lt;），键入There are no posts available to read. All y'all come back soon, yer hear.  呵呵，纯粹好玩儿。</p><p style=''> </p><p style=''>好了，我们的视图现在是这样子了：</p><p style=''> </p><p style=''> </p><pre name='code' class='ruby'>&lt;div id=“posts“&gt;  &lt;% if !@posts.blank? %&gt;    &lt;% for post in @posts %&gt;      &lt;div class=“post“&gt;        &lt;h3&gt;&lt;%= post.subject %&gt;&lt;/h3&gt;        &lt;%= post.body %&gt;      &lt;/div&gt;    &lt;% end %&gt;  &lt;% else %&gt;    &lt;p&gt;There are no posts available to read. All y'all come back soon, yer hear.&lt;/p&gt;  &lt;% end %&gt;&lt;/div&gt;</pre><p> </p><p style=''> </p><p style=''>现在可以运行单元测试了，应该可以通过。可以在命令行中输入：rake test:functionals   或者直接在编辑器里键入control+\然后选择2：<span style=''>Test Functionals</span></p><p style=''> </p><p style=''>我们现在还不能让用户留言。</p><p style=''> </p><p style=''> </p><p style=''>Foxy Fixtures</p><p style=''> </p><p style=''>创建一个comment模型</p><p style=''>ruby script/generate model Comment body:text name:string post:references</p><p style=''> </p><p style=''>请注意，这里post:references的作用和以前的post_id:integer是一样的。在生成的迁移文件中，它创建了<span style=''>t.reference :post</span><span style=''>，</span></p><p style=''>下面是生成的第二个迁移文件</p><p style=''> </p><pre name='code' class='ruby'>create_table :comments do |t|  t.text :body  t.string :name  t.references :post  t.timestampsend</pre><p> </p><p style=''> </p><p style=''>运行这个迁移。命令行里键入 rake db:migrate , 或直接在编辑器按下control+| 然后在弹出的菜单重选择<span style=''>Migrate to Current</span></p><p style=''> </p><p style=''><span style=''>下面，我们创建几个</span>comment fixtures<span style=''>，以便我们看看</span>Foxy Fixtures<span style=''>怎么运行的。</span></p><p style=''><span style=''>打开</span>test/fixtures/comments.yml:</p><p style=''> </p><p style=''> </p><pre name='code' class='ruby'>one:  body: MyText  name: MyString  post:two:  body: MyText  name: MyString  post:</pre><p> </p><p style=''> </p><p style=''>字段post替代了rails1.2中post_id的位置。</p><p style=''>上面我们有了published和nonpublished，或许很难记住，我们有一个快捷键。</p><p style=''>把光标放在post: 后面，然后按下 option+Esc , 就可以选择了。</p><p style=''> </p><p style=''>关联</p><p style=''> </p><p style=''>为了能够用到Foxy Fixtures，我们必须增加两个模型类之间的关联。</p><p style=''>现在你已经可以快速切换到模型类的文件了，（shift+option+command+下箭头）在comment.rb 模型类文件中，键入bt然后按下Tab键，键入post</p><p style=''> </p><pre name='code' class='ruby'>belongs_to :post, :class_name =&gt; “Post“, :foreign_key =&gt; “post_id“</pre><p> </p><p style=''> </p><p style=''>现在:class_name和:foreign_key都已经一起自动的把object改为post了，当然，您继续按下Tab键，还可以继续改。不过我们这里就不需要了，直接删除后面的就行了。</p><p style=''> </p><p style=''>现在它是这样的：</p><p style=''> </p><pre name='code' class='ruby'>class Comment &lt; ActiveRecord::Base  belongs_to :postend</pre><p> </p><p style=''> </p><p style=''>然后去看看post类，打开Post.rb</p><p style=''> </p><p style=''>键入hm,然后Tab。 同样的我们不需要那些option，删除。</p><p style=''> </p><p style=''> </p><pre name='code' class='ruby'>class Post &lt; ActiveRecord::Base  has_many :commentsend</pre><p> </p><p style=''>如果您需要has_many :through ，可以键入hmt然后tab，就行了。</p><p style=''> </p><p style=''>最后我们测试一下。（control+\）</p><p style=''> </p><p style=''> </p><p style=''> </p><p style=''>路由</p><p style=''> </p><p style=''>打开路由文件routes.rb</p><p style=''> </p><p style=''>修改一下：</p><p style=''> </p><pre name='code' class='ruby'>ActionController::Routing::Routes.draw do |map|  map.resources :posts  map.connect ':controller/:action/:id'  map.connect ':controller/:action/:id.:format'end</pre><p> </p><p style=''> </p><p style=''> </p><p style=''> </p><p style=''>创建文章</p><p style=''> </p><p style=''>从Post模型文件post.rb，您可以快速导航到同名的控制器文件，可以支持单数形式的控制器名或者复数形式的控制器名称，但是默认都是复数形式的，以更加符合REST风格。</p><p style=''> </p><p style=''>要创建一个PostsController，可以使用Go To...的快捷键shift+option+command+下箭头，然后选择Controller，因为没有post_controller.rb或者posts_controller.rb，所以会问您是否需要创建一个，确认后，就得到我们自己的posts_controller.rb文件了。</p><p style=''> </p><p style=''>注意，我们通常也可以使用脚手架来自动生成控制器文件，包括路由和测试文件。</p><p style=''> </p><p style=''>在posts_controller里面，我们先要创建一个控制器类。</p><p style=''>如果posts_controller.rb里面有内容，清空全部的内容，然后键入cla，按下Tab，选择<span style=''>Create controller class</span><span style=''>，在光标处键入</span><span style=''>Posts</span><span style=''>，然后</span><span style=''>tab</span><span style=''>，然后键入</span><span style=''>post</span><span style=''>，然后</span><span style=''>tab</span><span style=''>，最后键入</span><span style=''>Post</span><span style=''>，然后</span><span style=''>tab</span><span style=''>，光标回到了类的中间。</span></p><p style=''> </p><p style=''> </p><pre name='code' class='ruby'>class PostsController &lt; ApplicationController  before_filter :find_post  private  def find_post    @post = Post.find(params[:id]) if params[:id]  endend</pre><p> </p><p style=''> </p><p style=''>TDD测试PostsController</p><p style=''> </p><p style=''>当前是没有一个PostsController的功能测试的，我们可以继续使用GoTo...的快捷键：shift+option+command+下箭头，然后选择Functional Test,就会创建一个控制器测试文件</p><p style=''> </p><p style=''>然后分别为index, new, edit三个方法建立测试，使用deftg+Tab的方式。</p><p style=''> </p><p style=''>要建立create方法的测试，请键入deftp，然后按下Tab，键入create，然后tab，键入post，然后tab，按下delete键，再tab，再delete，再Tab，光标就转移到{}中，然后修改成下面这样：</p><p style=''> </p><pre name='code' class='ruby'>def test_should_post_create  post :create, :post =&gt; { :subject =&gt; 'Test', :body =&gt; 'Some body', :published =&gt; '1' }  assert_response :redirectend</pre><p> </p><p style=''> </p><p style=''>在assert_response这一行后面，我们可以测试我们想跳转重定向的位置。</p><p style=''><span style=''>如果您键入art，就会创建一个：</span>assert_redirected_to :action =&gt; “index“  <span style=''>代码片段</span></p><p style=''>现在增加了好几个assert_redirected_to的代码片段，使用到了资源化路由( resourceful route)</p><p style=''> </p><ul style=''><li style=''><span style=''>artp – </span>assert_redirected_to model_path(@model)</li><li style=''><span style=''>artpp – </span>assert_redirected_to models_path</li><li style=''><span style=''>artnp – </span>assert_redirected_to parent_child_path(@parent, @child)</li><li style=''><span style=''>artnpp – </span>assert_redirected_to parent_child_path(@parent)</li></ul><p style=''> </p><p style=''>键入artpp，然后按下Tab，然后键入post,这样生成的断言就会要求create动作重定向到index页面</p><p style=''> </p><p style=''>最后的test_should_post_create方法应该是这样的：</p><p style=''> </p><p style=''> </p><pre name='code' class='ruby'>def test_should_post_create  post :create, :post =&gt; { :subject =&gt; 'Test', :body =&gt; 'Some body', :published =&gt; '1' }  assert_response :redirect  assert_redirected_to posts_pathend</pre><p> </p><p style=''> </p><p style=''>然后运行测试，然后可以看到这些新创建的测试都没通过</p><p style=''> </p><p style=''> </p><p style=''>视图</p><p style=''> </p><p style=''> </p><p style=''><span style=''>现在回到</span>posts_controller.rb<span style=''>文件（</span>option+command+<span style=''>下箭头）</span></p><p style=''>我们要创建三个新的方法：index, new, edit。新方法可以这样来创建：<span style=''>键入</span><span style=''> </span><span style=''>def</span><span style=''>, </span><span style=''>⇥</span><span style=''>, </span><span style=''>index</span><span style=''>, </span><span style=''>⇥</span><span style=''>, </span><span style=''>@posts = Post.fina</span><span style=''>, </span><span style=''>⇥</span><span style=''>, </span><span style=''>⌫</span><span style=''>.</span></p><p style=''> </p><p style=''>现在这三个方法分别需要三个视图模板来对应。</p><p style=''> </p><p style=''>把光标放在<span style=''>index</span>方法中，呼叫出Goto...菜单（shift+option+command+下箭头），选择View，会创建一个新的index.html.erb模板，</p><p style=''> </p><p style=''>让我们来创建一个表格来显示Posts吧</p><p style=''> </p><p style=''>键入table，按下control+&lt;，生成table标签。</p><p style=''>然后在table标签中生成tbody标签</p><p style=''> </p><p style=''>在tbody里，我们希望可以枚举 @posts ，每一行一条记录。</p><p style=''> </p><p style=''>按三次control+&gt;, 创建&lt;%- -%&gt;，在里面键入 <span style=''>@posts.each do |post|</span></p><p style=''> </p><p style=''>转到下一行（command+enter），键入end, 按下Tab，生成&lt;% end -%&gt;，这样我们在这个erb模板中就有了一个ruby的代码块了。</p><p style=''> </p><p style=''>在这个代码块中，生成tr和td，我们把post的标题放在这个单元格里。</p><p style=''> </p><p style=''>键入 post.subject,选中，然后按下control+&gt;，生成<span style=''>&lt;%= post.subject %&gt;</span><span style=''>.</span></p><p style=''> </p><p style=''>最后形成这样子：</p><p style=''> </p><pre name='code' class='ruby'>&lt;table&gt;  &lt;tbody&gt;    &lt;%- @posts.each do |post| -%&gt;      &lt;tr&gt;        &lt;td&gt;&lt;%= post.subject %&gt;&lt;/td&gt;      &lt;/tr&gt;    &lt;% end -%&gt;  &lt;/tbody&gt;&lt;/table&gt;</pre><p> </p><p style=''> </p><p style=''> </p><p style=''>Forms</p><p style=''> </p><p style=''>把光标放在Controller的new方法中，按下shift+option+command+下箭头，叫出Goto菜单，选择View，生成new.html.erb</p><p style=''> </p><p style=''>在新的new.html.erb文件中，键入ffe，然后tab，键入post，然后tab两次</p><p style=''> </p><p style=''>有两个snippet可以生成form_for: ff和ffe，唯一的区别就是ff生成的代码没有error_messages_for那部分内容</p><p style=''> </p><p style=''>然后我们需要为subject属性增加一个标签和文本框：</p><p style=''> </p><p style=''>首先生成一个p标签（control+&lt;，然后tab），键入f. 然后tab，选择Label,把默认的改为subject，然后tab, 删除剩下的。</p><p style=''>接着创建一个&lt;br&gt;标签（control+entern），键入f.然后tab，选择TextField，键入subject</p><p style=''> </p><p style=''>现在重复创建body和published两个文本域</p><p style=''> </p><p style=''>请注意，published这个属性的标签最好用published yet?，你可以tab进默认的字符串替换掉。</p><p style=''>最后用f. snippet增加一个submit按钮</p><p style=''> </p><p style=''>启动script/server，然后访问http://localhost:3000/posts/new</p><p style=''> </p><p style=''>最后的form代码如下：</p><p style=''> </p><pre name='code' class='ruby'>&lt;%= error_messages_for :post %&gt;&lt;% form_for @post do |f| -%&gt;  &lt;p&gt;    &lt;%= f.label :subject %&gt;&lt;br /&gt;    &lt;%= f.text_field :subject %&gt;  &lt;/p&gt;  &lt;p&gt;    &lt;%= f.label :body %&gt;&lt;br /&gt;    &lt;%= f.text_area :body %&gt;  &lt;/p&gt;  &lt;p&gt;    &lt;%= f.label :published, “Published yet?“ %&gt;&lt;br /&gt;    &lt;%= f.check_box :published %&gt;  &lt;/p&gt;  &lt;p&gt;    &lt;%= f.submit “Submit“ %&gt;  &lt;/p&gt;&lt;% end -%&gt;</pre><p> </p><p style=''> </p><p style=''>值得说明的是：如果您按下control+enter生成了br标签，但不是&lt;br /&gt;，而你希望更加符合xhtml的规范，请转到TextMate的<span style=''>preferences</span><span style=''>，选择</span><span style=''>advanced</span><span style=''>标签，选中</span><span style=''>“Shell Variablees”</span><span style=''>，增加一个变量叫做</span><span style=''>TM_XHTML,</span><span style=''>值是 /</span></p><p style=''> </p><p style=''> </p><p style=''>Partials</p><p style=''> </p><p style=''>刚才我们创建的这个form和edit.html.erb模板所需要的form是一模一样的，除了复制/粘帖的方法以外，我们还可以创建一个局部模板，减少不必要的重复。</p><p style=''>全部选中form(command+A)，然后按下control+shift+H，会出来一个对话框，我们给他一个名字叫做form，然后确定。</p><p style=''>可以看到自动生成了一个名叫_form.html.erb的文件，刚才的form都在这个_form.html.erb文件中，而new.html.erb的内容被一个语句代替：</p><p style=''>&lt;%= render :partial =&gt; 'form' %&gt;</p><p style=''> </p><p style=''>然后我们创建edit.html.erb:  回到控制器文件，把光标放在edit方法上，按下shift+option+command+下箭头, 就自动生成了edit.html.erb,把刚才上面的语句粘帖到空白文件中。</p><p style=''> </p><p style=''> </p><p style=''> </p><p style=''>Link Helpers</p><p style=''> </p><p style=''>在new.html.erb底下我们还想创建一个新的返回全部文章列表的链接。在post控制器，而不是在blog控制器噢。其实就是调用index方法，通过resources rout: posts_path</p><p style=''> </p><p style=''>下面这些link_to是支持resources route的：</p><p style=''> </p><ul style=''><li style=''><span style=''>lip – </span>&lt;%= link_to “link text...“, model_path(@model) %&gt;</li><li style=''><span style=''>lipp – </span>&lt;%= link_to “link text...“, models_path %&gt;</li><li style=''><span style=''>linp – </span>&lt;%= link_to “link text...“, parent_child_path(@parent, @child) %&gt;</li><li style=''><span style=''>linpp – </span>&lt;%= link_to “link text...“, parent_child_path(@parent) %&gt;</li><li style=''><span style=''>lim – </span>&lt;%= link_to model.name, model_path(model) %&gt;</li></ul><p style=''> </p><p style=''> </p><p style=''>键入lipp,然后tab，键入Show all posts，然后tab两次，键入post</p><p style=''> </p><p style=''>(经过测试，lipp好像有些问题，不能生成相应的代码，可以在Bundle Editor里面选择Edit Snippets... ，把lipp的snippet改为：</p><p style=''>${TM_TEMPLATE_START_RUBY_EXPR}link_to ${1:“${2:link text...}“}, ${10:model}s_path${TM_TEMPLATE_END_RUBY_EXPR}</p><p style=''> </p><p style=''>这样就好了)</p><p style=''> </p><p style=''>Controllers: response_to 和 redirect_to</p><p style=''> </p><p style=''>现在我们在posts_controller.rb里面加上 create方法。先去访问文件（option+command+下箭头)</p><p style=''> </p><p style=''>在edit方法下面，键入def，然后tab，然后键入create，然后tab。然后在create方法中填充下面的内容</p><p style=''> </p><p style=''> </p><pre name='code' class='ruby'>def create  @post = Post.new(params[:post])  if @post.save  else  endend</pre><p> </p><p style=''>把光标放在else上面，键入repp，然后tab2次。用post代替选中的文字。</p><p style=''> </p><p style=''>redirect_to也有很多变化</p><p style=''> </p><ul style=''><li style=''><span style=''>rep – </span>redirect_to(model_path(@model))</li><li style=''><span style=''>repp – </span>redirect_to(models_path)</li><li style=''><span style=''>renp – </span>redirect_to(parent_child_path(@parent, @child))</li><li style=''><span style=''>renpp – </span>redirect_to(parent_child_path(@parent))</li></ul><p style=''> </p><p style=''> </p><p style=''>在if语句条件为假的部分，我们演示一下respond_to 代码块。有两个方法生成respond_to代码块：</p><p style=''> </p><p style=''>键入rest，然后tab，生成</p><p style=''> </p><p style=''> </p><pre name='code' class='ruby'>respond_to do |wants|  wants.html {  }end</pre><p> </p><p style=''> </p><p style=''>然后按两次tab，光标置入wants.html{}里面，键入ra，然后tab，然后键入new。最终代码如下：</p><p style=''> </p><p style=''> </p><pre name='code' class='ruby'>respond_to do |wants|  wants.html { render :action =&gt; “new“ }end</pre><p> </p><p style=''> </p><p style=''>另一个，可以使用“升级”了的快捷键（shift+command+H），可以把选中的代码转换到respond_to代码块里。</p><p style=''> </p><p style=''>选中if语句条件为真部分的respond_to整行（shift+command+L）然后按shift+command+H，光标停在js上，删除这一行（control+shift+K），最终代码变成：</p><p style=''> </p><pre name='code' class='ruby'>def create  @post = Post.new(params[:post])  if @post.save    respond_to do |wants|      wants.html do        redirect_to(posts_path)      end    end  else    respond_to do |wants|      wants.html { render :action =&gt; “new“ }    end  endend</pre><br/><p> </p><p style=''>现在我们可以在http://localhost:3000/posts/new 添加新的文章，并且在http://loclahost:3000/blog 查看文章了。</p><p style=''> </p><p style=''> </p><p style=''> </p>
      </div>
      
      
        <div id="forum_advert_b5"><script type="text/javascript">
google_ad_client = "pub-9971846879634397";
google_ad_slot = "6749798418";
google_ad_width = 728;
google_ad_height = 90;
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
        <div id="topic_copyright">声明：JavaEye文章版权属于作者，受法律保护。没有作者书面许可不得转载。 </div>
        <div id="forum_advert_b3">
          <span>推荐链接</span>
          <ul class='adverts'><li><a href='/adverts/126' target='_blank'><span style="color:red;font-weight:bold;">在繁琐中挣扎还是简化自主管理？</span></a></li><li><a href='/adverts/170' target='_blank'><span style="color:blue;font-weight:bold;">6月份JAVA技术沙龙活动通知</span></a></li><li><a href='/adverts/111' target='_blank'><span style="color:red;font-weight:bold;">下载免费的 IBM DB2 Express-C 数据库</span></a></li></ul>
        </div>
          </td>
  </tr>
  <tr>
    <td class="postauthor"><a href="#">返回顶楼</a></td>
    <td class="postcontent">
      <div class="icons">
        <a href='http://shanghaichris.javaeye.com' class='icon_www' title='浏览作者的博客'>&nbsp;</a>
        <a href='http://shanghaichris.javaeye.com/blog/profile' class='icon_profile' title='浏览作者资料'>&nbsp;</a>
        <a href="http://app.javaeye.com/messages/new?message%5Breceiver_name%5D=shanghaichris" class="icon_pm" title="发送站内短信">&nbsp;</a>
        <a href='http://shanghaichris.javaeye.com/blog/guest_book' class='icon_guestbook' title='给作者留言'>&nbsp;</a>
        
        
      </div>
                        </td>
  </tr>
  <tr class="sep2"><td colspan="2"></td></tr>
<tr id="p_483465">
  <td class="postauthor">
    <ul>
      <li class="name">shanghaichris</li>
      <li>等级: <img src="/images/star1.gif" alt="一星会员" title="一星会员"/></li>
      <li><a href='http://shanghaichris.javaeye.com' target='_blank'><img alt="用户头像" class="logo" src="http://www.javaeye.com/images/user-logo.gif?1194185304" title="shanghaichris的博客: shanghaichris" /></a></li>
      <li>文章: 13</li>
      <li>积分: 100</li>
      <li>来自: 上海</li>
      <li><img src='/images/status/offline.gif'/></li>
    </ul>
  </td>
  <td class="postcontent">
    <div class="postactions">
      <div class="description">发表时间：2008-03-11 </div>
      <div class="links">
        
        
      </div>
    </div>
    <div class="postbody clearfix">
      
        <p style=''>还有一些迁移工作</p><p style=''> </p><p style=''>我们还有一些附加工作，</p><p style=''>把comments表的name列改名为author</p><p style=''>在comments表中增加一个author_url字段</p><p style=''>在comments表中的post_id字段增加一个索引</p><p style=''> </p><p style=''>让我们尝试在一个迁移文件中做这些事情。</p><p style=''>启动快速迁移(shift+control+M)，给我们的迁移起个名字叫做ModifyComments，自动生成了003_Modify_comments.rb并打开，光标放在了mtab后面，删除它，键入mcol，然后tab，选择<span style=''>Rename / Rename Column</span><span style=''> (3)</span><span style=''>，键入</span><span style=''>comments</span><span style=''> </span><span style=''>⇥</span><span style=''> </span><span style=''>name</span><span style=''> </span><span style=''>⇥</span><span style=''> </span><span style=''>author</span><span style=''> </span><span style=''>⇥</span><span style=''> </span><span style=''>↩</span><span style=''>.</span></p><p style=''>同样我们再次键入mcol，然后tab，选择<span style=''>Add / Remove Column</span><span style=''> (1)</span>，键入<span style=''>comments</span><span style=''>⇥author_url</span>，然后<span style=''>⇥</span>两次。</p><p style=''>现在键入mind,然后<span style=''>⇥</span>,选择<span style=''>Choose </span><span style=''>Add / Remove Index</span><span style=''> </span>（<span style=''>1</span>），键入<span style=''>comments</span><span style=''>⇥post_id.  </span></p><p style=''>最终的代码如下：</p><p style=''> </p><p style=''>class ModifyComments &lt; ActiveRecord::Migration</p><p style=''>  def self.up</p><p style=''>    rename_column :comments, :name, :author</p><p style=''>    add_column :comments, :author_url, :string</p><p style=''>    add_index :comments, :post_id</p><p style=''>  end</p><p style=''> </p><p style=''>  def self.down</p><p style=''>    remove_index :comments, :post_id</p><p style=''>    remove_column :comments, :author_url</p><p style=''>    rename_column :comments, :author, :name</p><p style=''>  end</p><p style=''>end</p><p style=''> </p><p style=''>请注意，down方法的顺序是和up方法的顺序相反的。</p><p style=''>保存并执行这个迁移</p><p style=''> </p><p style=''>要记住修改comments的fixture文件。先打开文件（command+T,键入cy，回车），把name字段改名为author字段，并在每一节增加author_url，然后测试，应该都顺利通过。</p><p style=''> </p><p style=''>此外，我们希望当一篇文章发表时我们可以被通知到，为了做到这一点，我们需要做以下的修改：</p><p style=''>当文章发布时，有一个时间日期published date可以跟踪；</p><p style=''>移除published这个字段，因为是否已经发布我们可以看published date。</p><p style=''> </p><p style=''><span style=''>开始快速迁移（shift+control+M），起个名字叫做 </span>AddPublishedAtForPosts<span style=''>，</span> <span style=''>一个新的迁移文件</span>004_add_published_at_for_posts.rb,<span style=''>光标还是在</span>mtab<span style=''>后面，一样，我们把</span>mtab<span style=''>删除，键入</span>mcol<span style=''>，然后</span>tab<span style=''>，在弹出来的菜单上选择</span>Add / Remove Column<span style=''> (1), </span><span style=''>键入</span>posts<span style=''> </span><span style=''>⇥</span><span style=''> </span>published_at<span style=''> </span><span style=''>⇥</span><span style=''> </span>datetime<span style=''> </span><span style=''>⇥</span><span style=''> </span><span style=''>和</span><span style=''>enter</span><span style=''>。</span></p><p style=''> </p><p style=''><span style=''>再次键入</span><span style=''>mcol</span><span style=''>，</span><span style=''>tab</span><span style=''>，然后选择</span>Remove / Add Column<span style=''>（</span>5<span style=''>），键入</span>posts<span style=''> </span><span style=''>⇥</span><span style=''> </span>published<span style=''>，然后</span>tab<span style=''>两次。</span></p><p style=''>最终代码如下：</p><p style=''>class AddPublishedAtForPosts &lt; ActiveRecord::Migration</p><p style=''>  def self.up</p><p style=''>    add_column :posts, :published_at, :datetime</p><p style=''>    remove_column :posts, :published</p><p style=''>  end</p><p style=''> </p><p style=''>  def self.down</p><p style=''>    add_column :posts, :published, :boolean</p><p style=''>    remove_column :posts, :published_at</p><p style=''>  end</p><p style=''>end</p><p style=''> </p><p style=''>Remove/Add Column命令自动在down方法中决定published字段为布尔字段，这取决于当前数据库db/schema.rb文件的状态。</p><p style=''> </p><p style=''>然后保存并执行迁移。</p><p style=''> </p><p style=''> </p><p style=''> </p><p style=''><span style='color: #000000;'>现在我们要修改posts fixture文件。选择posts.yml文件（command+T, 键入pyml，选择posts.yml）。用published_at: 2008-01-01代替</span><span style=''>published: true</span><span style=''>。</span><span style=''> </span><span style=''>修改</span><span style=''>posts</span><span style=''>功能测试，首先先打开测试文件( shift+option+command+下箭头，选择Go to functional Test),用</span><span style=''>:published_at =&gt; Date.new(2008, 1, 1) </span><span style=''>替换</span><span style=''> :published =&gt; '1'.</span></p><p style=''> </p><p style=''>修改<span style=''>post</span>模型，打开<span style=''>posts.rb</span>（<span style=''>shift+option+command+</span>下箭头，选择Go to Model), 黏贴下面的代码：</p><p style=''>class Post &lt; ActiveRecord::Base</p><p style=''>  has_many :comments</p><p style=''> </p><p style=''>  def published</p><p style=''>    !self.published_at.nil?</p><p style=''>  end</p><p style=''> </p><p style=''>  def published=(publish)</p><p style=''>    if publish</p><p style=''>      self.published_at = DateTime.now if self.published_at.nil?</p><p style=''>    else</p><p style=''>      self.published_at = nil</p><p style=''>    end</p><p style=''>  end</p><p style=''>end</p><p style=''> </p><p style=''> </p><p style=''><span style=''>修改blog_controller.rb，用</span>Post.find(:all, :conditions =&gt; “published_at IS NOT NULL“)<span style=''>代替</span>Post.find_all_by_published(true)<span style=''>。然后测试运行，所有的测试都应该通过。</span></p><div><span class='Apple-style-span' style='font-family: &apos;STHeiti Light&apos;; color: #223512;'><br/></span></div>
      </div>
      
          </td>
  </tr>
  <tr>
    <td class="postauthor"><a href="#">返回顶楼</a></td>
    <td class="postcontent">
      <div class="icons">
        <a href='http://shanghaichris.javaeye.com' class='icon_www' title='浏览作者的博客'>&nbsp;</a>
        <a href='http://shanghaichris.javaeye.com/blog/profile' class='icon_profile' title='浏览作者资料'>&nbsp;</a>
        <a href="http://app.javaeye.com/messages/new?message%5Breceiver_name%5D=shanghaichris" class="icon_pm" title="发送站内短信">&nbsp;</a>
        <a href='http://shanghaichris.javaeye.com/blog/guest_book' class='icon_guestbook' title='给作者留言'>&nbsp;</a>
        
        
      </div>
                        <div id='post_rate_box_483465' class='post_rate_box'><a href='#' onclick='return false;' class='good' title='好'>0</a> <a href='#' onclick='return false;' class='hidden' title='差'>0</a> 请登录后投票</div>                  </td>
  </tr>
  <tr class="sep2"><td colspan="2"></td></tr>
<tr id="p_483468">
  <td class="postauthor">
    <ul>
      <li class="name">shanghaichris</li>
      <li>等级: <img src="/images/star1.gif" alt="一星会员" title="一星会员"/></li>
      <li><a href='http://shanghaichris.javaeye.com' target='_blank'><img alt="用户头像" class="logo" src="http://www.javaeye.com/images/user-logo.gif?1194185304" title="shanghaichris的博客: shanghaichris" /></a></li>
      <li>文章: 13</li>
      <li>积分: 100</li>
      <li>来自: 上海</li>
      <li><img src='/images/status/offline.gif'/></li>
    </ul>
  </td>
  <td class="postcontent">
    <div class="postactions">
      <div class="description">发表时间：2008-03-11 </div>
      <div class="links">
        
        
      </div>
    </div>
    <div class="postbody clearfix">
      
        这篇文章的原文在ruby on rails bundle的帮助里，在TextMate里面打开rails项目的一个rb文件，使用快捷键Control+H，然后选择2，就可以看到这篇文章了。最新的ror bundle更新于上个月底，还是很具有参考价值的，对于如何快速使用TextMate进行rails开发是一个不错的教程。<br /><br />不过还有一些没完成。不是特别完整。但是基本的快捷键都包含在里面了。
      </div>
      
          </td>
  </tr>
  <tr>
    <td class="postauthor"><a href="#">返回顶楼</a></td>
    <td class="postcontent">
      <div class="icons">
        <a href='http://shanghaichris.javaeye.com' class='icon_www' title='浏览作者的博客'>&nbsp;</a>
        <a href='http://shanghaichris.javaeye.com/blog/profile' class='icon_profile' title='浏览作者资料'>&nbsp;</a>
        <a href="http://app.javaeye.com/messages/new?message%5Breceiver_name%5D=shanghaichris" class="icon_pm" title="发送站内短信">&nbsp;</a>
        <a href='http://shanghaichris.javaeye.com/blog/guest_book' class='icon_guestbook' title='给作者留言'>&nbsp;</a>
        
        
      </div>
                        <div id='post_rate_box_483468' class='post_rate_box'><a href='#' onclick='return false;' class='good' title='好'>0</a> <a href='#' onclick='return false;' class='hidden' title='差'>0</a> 请登录后投票</div>                  </td>
  </tr>
  <tr class="sep2"><td colspan="2"></td></tr>
<tr id="p_495459">
  <td class="postauthor">
    <ul>
      <li class="name">lw223</li>
      <li>等级: 初级会员</li>
      <li><a href='http://lw223.javaeye.com' target='_blank'><img alt="用户头像" class="logo" src="http://www.javaeye.com/upload/logo/user/111331/83978e3a-e34e-36a9-acb3-1580d369a1bf.bmp?1244178233" title="lw223的博客: lw223" /></a></li>
      <li>文章: 807</li>
      <li>积分: 50</li>
      <li>来自: 北京</li>
      <li><img src='/images/status/offline.gif'/></li>
    </ul>
  </td>
  <td class="postcontent">
    <div class="postactions">
      <div class="description">发表时间：2008-03-24 </div>
      <div class="links">
        
        
      </div>
    </div>
    <div class="postbody clearfix">
      
        TextMate只能在苹果机子下用吧 
      </div>
      
          </td>
  </tr>
  <tr>
    <td class="postauthor"><a href="#">返回顶楼</a></td>
    <td class="postcontent">
      <div class="icons">
        <a href='http://lw223.javaeye.com' class='icon_www' title='浏览作者的博客'>&nbsp;</a>
        <a href='http://lw223.javaeye.com/blog/profile' class='icon_profile' title='浏览作者资料'>&nbsp;</a>
        <a href="http://app.javaeye.com/messages/new?message%5Breceiver_name%5D=lw223" class="icon_pm" title="发送站内短信">&nbsp;</a>
        <a href='http://lw223.javaeye.com/blog/guest_book' class='icon_guestbook' title='给作者留言'>&nbsp;</a>
        
        
      </div>
                        <div id='post_rate_box_495459' class='post_rate_box'><a href='#' onclick='return false;' class='good' title='好'>0</a> <a href='#' onclick='return false;' class='hidden' title='差'>0</a> 请登录后投票</div>                  </td>
  </tr>
  <tr class="sep2"><td colspan="2"></td></tr>
<tr id="p_495467">
  <td class="postauthor">
    <ul>
      <li class="name">shanghaichris</li>
      <li>等级: <img src="/images/star1.gif" alt="一星会员" title="一星会员"/></li>
      <li><a href='http://shanghaichris.javaeye.com' target='_blank'><img alt="用户头像" class="logo" src="http://www.javaeye.com/images/user-logo.gif?1194185304" title="shanghaichris的博客: shanghaichris" /></a></li>
      <li>文章: 13</li>
      <li>积分: 100</li>
      <li>来自: 上海</li>
      <li><img src='/images/status/offline.gif'/></li>
    </ul>
  </td>
  <td class="postcontent">
    <div class="postactions">
      <div class="description">发表时间：2008-03-24 </div>
      <div class="links">
        
        
      </div>
    </div>
    <div class="postbody clearfix">
      
        <div class="quote_title">lw223 写道</div><div class="quote_div">TextMate只能在苹果机子下用吧 </div><br /><br />是的，TextMate是苹果下最顺手的Text Editor<br />
      </div>
      
          </td>
  </tr>
  <tr>
    <td class="postauthor"><a href="#">返回顶楼</a></td>
    <td class="postcontent">
      <div class="icons">
        <a href='http://shanghaichris.javaeye.com' class='icon_www' title='浏览作者的博客'>&nbsp;</a>
        <a href='http://shanghaichris.javaeye.com/blog/profile' class='icon_profile' title='浏览作者资料'>&nbsp;</a>
        <a href="http://app.javaeye.com/messages/new?message%5Breceiver_name%5D=shanghaichris" class="icon_pm" title="发送站内短信">&nbsp;</a>
        <a href='http://shanghaichris.javaeye.com/blog/guest_book' class='icon_guestbook' title='给作者留言'>&nbsp;</a>
        
        
      </div>
                        <div id='post_rate_box_495467' class='post_rate_box'><a href='#' onclick='return false;' class='good' title='好'>0</a> <a href='#' onclick='return false;' class='hidden' title='差'>0</a> 请登录后投票</div>                  </td>
  </tr>
  <tr class="sep2"><td colspan="2"></td></tr>
<tr id="p_495894">
  <td class="postauthor">
    <ul>
      <li class="name">t0uch</li>
      <li>等级: <img src="/images/star1.gif" alt="一星会员" title="一星会员"/></li>
      <li><a href='http://t0uch.javaeye.com' target='_blank'><img alt="用户头像" class="logo" src="http://www.javaeye.com/upload/logo/user/20968/ff957196-5835-3330-9c5c-49e12cffa707.jpg?1236832528" title="t0uch的博客: 蜡笔的天真涂鸦" /></a></li>
      <li>文章: 575</li>
      <li>积分: 140</li>
      <li>来自: 深圳</li>
      <li><img src='/images/status/offline.gif'/></li>
    </ul>
  </td>
  <td class="postcontent">
    <div class="postactions">
      <div class="description">发表时间：2008-03-24 </div>
      <div class="links">
        
        
      </div>
    </div>
    <div class="postbody clearfix">
      
        很不错，我这样的textmate新手可以学习一下了
      </div>
      
          </td>
  </tr>
  <tr>
    <td class="postauthor"><a href="#">返回顶楼</a></td>
    <td class="postcontent">
      <div class="icons">
        <a href='http://t0uch.javaeye.com' class='icon_www' title='浏览作者的博客'>&nbsp;</a>
        <a href='http://t0uch.javaeye.com/blog/profile' class='icon_profile' title='浏览作者资料'>&nbsp;</a>
        <a href="http://app.javaeye.com/messages/new?message%5Breceiver_name%5D=t0uch" class="icon_pm" title="发送站内短信">&nbsp;</a>
        <a href='http://t0uch.javaeye.com/blog/guest_book' class='icon_guestbook' title='给作者留言'>&nbsp;</a>
        
        
      </div>
                        <div id='post_rate_box_495894' class='post_rate_box'><a href='#' onclick='return false;' class='good' title='好'>0</a> <a href='#' onclick='return false;' class='hidden' title='差'>0</a> 请登录后投票</div>                  </td>
  </tr>
  <tr class="sep2"><td colspan="2"></td></tr>
<tr id="p_498665">
  <td class="postauthor">
    <ul>
      <li class="name">Tin</li>
      <li>等级: <img src="/images/dimd1.gif" alt="一钻会员" title="一钻会员"/></li>
      <li><a href='http://tin.javaeye.com' target='_blank'><img alt="用户头像" class="logo" src="http://www.javaeye.com/upload/logo/user/22171/3041f2d5-327a-496f-850d-1cb22d7623c1.gif?1236832578" title="Tin的博客: Tin" /></a></li>
      <li>文章: 131</li>
      <li>积分: 967</li>
      <li>来自: 北京</li>
      <li><img src='/images/status/offline.gif'/></li>
    </ul>
  </td>
  <td class="postcontent">
    <div class="postactions">
      <div class="description">发表时间：2008-03-26 </div>
      <div class="links">
        
        
      </div>
    </div>
    <div class="postbody clearfix">
      
        太酷啦！谢谢翻译。Textmate有一本pragmatic programmer的书，也不错。但是这个Rails bundle的更贴近实际项目。
      </div>
      
          </td>
  </tr>
  <tr>
    <td class="postauthor"><a href="#">返回顶楼</a></td>
    <td class="postcontent">
      <div class="icons">
        <a href='http://tin.javaeye.com' class='icon_www' title='浏览作者的博客'>&nbsp;</a>
        <a href='http://tin.javaeye.com/blog/profile' class='icon_profile' title='浏览作者资料'>&nbsp;</a>
        <a href="http://app.javaeye.com/messages/new?message%5Breceiver_name%5D=Tin" class="icon_pm" title="发送站内短信">&nbsp;</a>
        <a href='http://tin.javaeye.com/blog/guest_book' class='icon_guestbook' title='给作者留言'>&nbsp;</a>
        
        
      </div>
                        <div id='post_rate_box_498665' class='post_rate_box'><a href='#' onclick='return false;' class='good' title='好'>0</a> <a href='#' onclick='return false;' class='hidden' title='差'>0</a> 请登录后投票</div>                  </td>
  </tr>
  <tr class="sep2"><td colspan="2"></td></tr>
<tr id="p_542623">
  <td class="postauthor">
    <ul>
      <li class="name">rubyonrailscn.org</li>
      <li>等级: 初级会员</li>
      <li><a href='http://rubyonrailscn-org.javaeye.com' target='_blank'><img alt="用户头像" class="logo" src="http://www.javaeye.com/images/user-logo.gif?1194185304" title="rubyonrailscn.org的博客: " /></a></li>
      <li>文章: 5</li>
      <li>积分: 40</li>
      <li>来自: 北京</li>
      <li><img src='/images/status/offline.gif'/></li>
    </ul>
  </td>
  <td class="postcontent">
    <div class="postactions">
      <div class="description">发表时间：2008-05-11 </div>
      <div class="links">
        
        
      </div>
    </div>
    <div class="postbody clearfix">
      
        textmate有一个功能特别好用，在Textmate中 “Help”》“Enhanced use in terminal” &gt; "create symbol"<br /><br />然后在 terminal 中就可以使用 “mate . ”来打开当前项目<br /><br />然后可以些一个 alaise <br />alias ett='mate app config lib db public test vendor/plugins &amp;'<br /><br />然后再“ett .”就可以打开只包含代码的项目
      </div>
      
          </td>
  </tr>
  <tr>
    <td class="postauthor"><a href="#">返回顶楼</a></td>
    <td class="postcontent">
      <div class="icons">
        <a href='http://rubyonrailscn-org.javaeye.com' class='icon_www' title='浏览作者的博客'>&nbsp;</a>
        <a href='http://rubyonrailscn-org.javaeye.com/blog/profile' class='icon_profile' title='浏览作者资料'>&nbsp;</a>
        <a href="http://app.javaeye.com/messages/new?message%5Breceiver_name%5D=rubyonrailscn.org" class="icon_pm" title="发送站内短信">&nbsp;</a>
        <a href='http://rubyonrailscn-org.javaeye.com/blog/guest_book' class='icon_guestbook' title='给作者留言'>&nbsp;</a>
        
        
      </div>
                        <div id='post_rate_box_542623' class='post_rate_box'><a href='#' onclick='return false;' class='good' title='好'>0</a> <a href='#' onclick='return false;' class='hidden' title='差'>0</a> 请登录后投票</div>                  </td>
  </tr>
  <tr class="sep2"><td colspan="2"></td></tr>
<tr id="p_581213">
  <td class="postauthor">
    <ul>
      <li class="name">rjbj</li>
      <li>等级: 初级会员</li>
      <li><a href='http://rjbj.javaeye.com' target='_blank'><img alt="用户头像" class="logo" src="http://www.javaeye.com/images/user-logo.gif?1194185304" title="rjbj的博客: rjbj" /></a></li>
      <li>文章: 6</li>
      <li>积分: 30</li>
      <li>来自: 深圳</li>
      <li><img src='/images/status/offline.gif'/></li>
    </ul>
  </td>
  <td class="postcontent">
    <div class="postactions">
      <div class="description">发表时间：2008-06-23 </div>
      <div class="links">
        
        
      </div>
    </div>
    <div class="postbody clearfix">
      
        windows下的“TextMate”=&gt;“etexteditor”
      </div>
      
          </td>
  </tr>
  <tr>
    <td class="postauthor"><a href="#">返回顶楼</a></td>
    <td class="postcontent">
      <div class="icons">
        <a href='http://rjbj.javaeye.com' class='icon_www' title='浏览作者的博客'>&nbsp;</a>
        <a href='http://rjbj.javaeye.com/blog/profile' class='icon_profile' title='浏览作者资料'>&nbsp;</a>
        <a href="http://app.javaeye.com/messages/new?message%5Breceiver_name%5D=rjbj" class="icon_pm" title="发送站内短信">&nbsp;</a>
        <a href='http://rjbj.javaeye.com/blog/guest_book' class='icon_guestbook' title='给作者留言'>&nbsp;</a>
        
        
      </div>
                        <div id='post_rate_box_581213' class='post_rate_box'><a href='#' onclick='return false;' class='good' title='好'>0</a> <a href='#' onclick='return false;' class='hidden' title='差'>0</a> 请登录后投票</div>                  </td>
  </tr>
  <tr class="sep2"><td colspan="2"></td></tr>
<tr id="p_581879">
  <td class="postauthor">
    <ul>
      <li class="name">carlosbdw</li>
      <li>等级: 初级会员</li>
      <li><a href='http://carlosbdw.javaeye.com' target='_blank'><img alt="用户头像" class="logo" src="http://www.javaeye.com/images/user-logo.gif?1194185304" title="carlosbdw的博客: carlosbdw" /></a></li>
      <li>文章: 274</li>
      <li>积分: 66</li>
      
      <li><img src='/images/status/offline.gif'/></li>
    </ul>
  </td>
  <td class="postcontent">
    <div class="postactions">
      <div class="description">发表时间：2008-06-24 </div>
      <div class="links">
        
        
      </div>
    </div>
    <div class="postbody clearfix">
      
        其实用什么编辑器都没关系，自己熟悉就好。
      </div>
      
          </td>
  </tr>
  <tr>
    <td class="postauthor"><a href="#">返回顶楼</a></td>
    <td class="postcontent">
      <div class="icons">
        <a href='http://carlosbdw.javaeye.com' class='icon_www' title='浏览作者的博客'>&nbsp;</a>
        <a href='http://carlosbdw.javaeye.com/blog/profile' class='icon_profile' title='浏览作者资料'>&nbsp;</a>
        <a href="http://app.javaeye.com/messages/new?message%5Breceiver_name%5D=carlosbdw" class="icon_pm" title="发送站内短信">&nbsp;</a>
        <a href='http://carlosbdw.javaeye.com/blog/guest_book' class='icon_guestbook' title='给作者留言'>&nbsp;</a>
        
        
      </div>
                        <div id='post_rate_box_581879' class='post_rate_box'><a href='#' onclick='return false;' class='good' title='好'>0</a> <a href='#' onclick='return false;' class='hidden' title='差'>0</a> 请登录后投票</div>                  </td>
  </tr>
  <tr class="sep2"><td colspan="2"></td></tr>

  </tbody>
</table>


<div class="actions">
  <div class="buttons"></div>
  <div class="wrapper"><div class="pagination"><span class="disabled prev_page">&laquo; 上一页</span> <span class="current">1</span> <a href="/topic/170282?page=2" rel="next">2</a> <a href="/topic/170282?page=2" class="next_page" rel="next">下一页 &raquo;</a></div></div>
</div>

<div>
  <div class="crumbs">
    <a href="/forums">论坛首页</a> <span class="arrow">&rarr;</span>
    <a href="/forums/board/Ruby">Ruby版</a>
     <span class="arrow">&rarr;</span> <a href='/forums/tag/rails'>rails</a>
    <br/><br/>跳转论坛:<select id="forum_urlname" name="forum[urlname]" onchange="window.location='/forums/board/'+this.value"><option value="Java">Java编程和Java企业应用</option>
<option value="web">Web前端技术：AJAX和RIA</option>
<option value="mobile">移动编程和手机应用开发</option>
<option value="Ruby" selected="selected">Ruby</option>
<option value="Python">Python</option>
<option value="PHP">PHP</option>
<option value="dotnet">Microsoft .Net</option>
<option value="Tech">综合技术</option>
<option value="New">入门讨论</option>
<option value="develop">软件开发和项目管理</option>
<option value="Industry">行业应用</option>
<option value="vendor">厂商论坛</option>
<option value="Job">招聘求职</option>
<option value="Life">海阔天空</option></select>
    <div id='forum_advert_b2'></div>
  </div>

  
</div>

<div style="display:none">
  <form action="/posts/rate" id="post_rate_form" method="post" onsubmit="new Ajax.Request('/posts/rate', {asynchronous:true, evalScripts:true, parameters:Form.serialize(this)}); return false;">
    <input type="hidden" id="post_rate_id" name="id"/>
    <input type="hidden" id="post_rate_type" name="type"/>
  </form></div>

<script type="text/javascript">
  dp.SyntaxHighlighter.HighlightAll('code', true, true);

  fix_image_size($$('div.postbody img'), 760);

  function rate_post(id, type) {
    Element.update('post_rate_box_' + id, '提交中...');
    new Ajax.Request('/posts/rate', {asynchronous:true, evalScripts:true, parameters:{"id":id, "type":type}});
  }

  function rate_topic(type) {
    Element.update('topic_rate_box', '提交中...');
    new Ajax.Request('/topics/rate', {asynchronous:true, evalScripts:true, parameters:{"id":170282, "type":type}});
  }

      
</script>


        </div>
        <div id="nav">
  <div class="wrapper">
    <ul>
            <li><a href="http://www.javaeye.com/">首页</a></li>
      <li><a href="http://www.javaeye.com/news">新闻</a></li>
      <li><a href="http://www.javaeye.com/forums" class='selected'>论坛</a></li>
      <li><a href="http://www.javaeye.com/ask">问答</a></li>
      <li><a href="http://www.javaeye.com/wiki">知识库</a></li>
      <li><a href="http://www.javaeye.com/blogs">博客</a></li>
      <li><a href="http://www.javaeye.com/groups">圈子</a></li>
      <li><a href="http://job.javaeye.com" target="_blank">招聘</a></li>
      <li><a href="http://www.javaeye.com/index/service">服务</a></li>
      <li class="last"><a href="http://www.javaeye.com/search">搜索</a></li>
    </ul>
  </div>
</div>

<div id="channel_nav">
  <ul>
    <li><a href="http://java.javaeye.com" >Java</a></li>
    <li><a href="http://ajax.javaeye.com" >AJAX</a></li>    
    <li><a href="http://ruby.javaeye.com" >Ruby</a></li>
    <li><a href="http://python.javaeye.com" >Python</a></li>
    <li><a href="http://agile.javaeye.com" >敏捷</a></li>
    <li><a href="http://mysql.javaeye.com" >MySQL</a></li>
    <li><a href="http://book.javaeye.com" >图书</a></li>
    <li><a href="http://oracle.javaeye.com" >Oracle</a></li>
    <li><a href="http://dorado.javaeye.com" >Dorado</a></li>
    <li class="last"><a href="http://primeton.javaeye.com" >普元</a></li>
  </ul>
</div>
      </div>
      <div id="footer">
  <div id="site_nav">
    <ul>
      <li><a href="/index/service">广告服务</a></li>
      <li><a href="http://webmaster.javaeye.com">JavaEye黑板报</a></li>
      <li><a href="/index/aboutus">关于我们</a></li>
      <li><a href="/index/contactus">联系我们</a></li>
      <li class="last"><a href="/index/friend_links">友情链接</a></li>
    </ul>
  </div>
  <div id="copyright">
    &copy; 2003-2009 JavaEye.com.   All rights reserved. 上海炯耐计算机软件有限公司 [ 沪ICP备05023328号 ] 
  </div>
</div>

    </div>
    
<script type="text/javascript">
  document.write("<img src='http://stat.javaeye.com/?url="+ encodeURIComponent(document.location.href) + "&referrer=" + encodeURIComponent(document.referrer) + "&logged_in=no" + "' width='0' height='0' />");
</script>
  </body>
</html>
