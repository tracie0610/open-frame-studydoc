
<!-- saved from url=(0070)http://doc.javanb.com/spring-framework-reference-zh-2-0-5/ch12s05.html -->
<HTML><!-- #BeginTemplate "/Templates/doc.dwt" --><HEAD><META http-equiv="Content-Type" content="text/html; charset=GB2312">
<!-- #BeginEditable "doctitle" -->
<TITLE>12.5.&nbsp;iBATIS SQL Maps - Spring Framework  reference 2.0.5  参考手册中文版 - 在线文档 - JAVA 编程资料牛鼻站</TITLE>
<META name="keywords" content="Java, Sun, SDK, Spring Framework, reference,Documentation, 编程, 参考手册, 英文版">
<META name="description" content="Spring Framework  reference 2.0.5 参考手册中文版.">
<!-- #EndEditable --> 
<META name="robots" content="all">

<LINK href="./12.5.&#160;iBATIS SQL Maps - Spring Framework reference 2.0.5 参考手册中文版 - 在线文档 - JAVA 编程资料牛鼻站_files/style1.css" type="text/css" rel="stylesheet">
</HEAD><BODY bgcolor="#FFFFFF"><DIV id="bd" align="center">

<!-- begin: 头部导航 -->
<DIV id="tp">
<DIV id="tp_l">
<DIV id="tp_lt"><A href="http://www.javanb.com/" title="Java 编程资料牛鼻网, Java 程序员论坛, Java 编程资料" class="nobd"><IMG src="./12.5.&#160;iBATIS SQL Maps - Spring Framework reference 2.0.5 参考手册中文版 - 在线文档 - JAVA 编程资料牛鼻站_files/javanb.gif" width="250" height="60" border="0" title="Java 编程资料牛鼻网"></A></DIV>
</DIV>
<DIV id="tp_r">
<DIV id="tp_rt">
<!-- #BeginEditable "top468" -->

<SCRIPT type="text/javascript"><!--
google_ad_client = "pub-5801877696325956";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "text_image";
//2007-05-10: JavaNB_Doc_Page_468x60
google_ad_channel = "4768760441";
google_color_border = "FFFFFF";
google_color_bg = "FFFFFF";
google_color_link = "776655";
google_color_text = "000000";
google_color_url = "776655";
//-->
</SCRIPT>
<SCRIPT type="text/javascript" src="./12.5.&#160;iBATIS SQL Maps - Spring Framework reference 2.0.5 参考手册中文版 - 在线文档 - JAVA 编程资料牛鼻站_files/show_ads.js">
</SCRIPT><IFRAME name="google_ads_frame" width="468" height="60" frameborder="0" src="./12.5.&#160;iBATIS SQL Maps - Spring Framework reference 2.0.5 参考手册中文版 - 在线文档 - JAVA 编程资料牛鼻站_files/ads.htm" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no"></IFRAME>
<!-- #EndEditable --> 
</DIV>
</DIV>
</DIV>

<TABLE cellspacing="0" cellpadding="0" width="100&percnt;" border="0">
<TBODY><TR><TD><DIV id="Nav">
<DIV class="ltab"><DIV class="tabContent"><A href="http://www.javanb.com/">首页</A></DIV></DIV>
<DIV class="tab"><DIV class="tabContent"><A href="http://www.javanb.com/bbs/">论坛</A></DIV></DIV>
<DIV class="tab"><DIV class="tabContent"><A href="http://book.javanb.com/">图书</A></DIV></DIV>
<DIV class="tab"><DIV class="tabContent"><A href="http://www.javanb.com/index-doc.html">开发资料</A></DIV></DIV>
<DIV class="tab"><DIV class="tabContent selected"><A href="http://doc.javanb.com/">在线文档</A></DIV></DIV>
<DIV class="tab"><DIV class="tabContent"><A href="http://url.javanb.com/">网址</A></DIV></DIV>
<DIV class="tab"><DIV class="tabContent"><A href="http://download.javanb.com/">下载</A></DIV></DIV>
<DIV class="rtab"><DIV class="tabContent"><A href="http://www.javanb.com/contact.html">联系我们</A></DIV></DIV>
</DIV></TD></TR>
<TR><TD height="5" id="NavLn">
</TR></TBODY></TABLE>
<!-- end: 头部导航 -->

<!-- #BeginEditable "topgg" -->

<!-- begin: search box -->
<DIV id="topad">
<FORM method="get" action="http://www.javanb.com/ggres.php" target="_top">
<!-- SiteSearch Google -->
<B>站内搜索</B>: 请输入搜索关键词 
<INPUT type="hidden" name="domains" value="javanb.com">
<INPUT type="text" name="q" size="31" maxlength="255" value="" id="sbi" class="inputclass">
<INPUT type="submit" name="sa" value="搜索" id="sbb" class="buttonclass">
<INPUT type="hidden" name="sitesearch" value="javanb.com">
<INPUT type="hidden" name="client" value="pub-5801877696325956">
<INPUT type="hidden" name="forid" value="1">
<INPUT type="hidden" name="channel" value="0487632749">
<INPUT type="hidden" name="ie" value="GB2312">
<INPUT type="hidden" name="oe" value="GB2312">
<INPUT type="hidden" name="cof" value="GALT:#0000aa;GL:1;DIV:#FFFFFF;VLC:0000ff;AH:center;BGC:FFFFFF;LBGC:F7EFD8;ALC:0000ff;LC:0000ff;T:000000;GFNT:0000ff;GIMP:0000ff;FORID:11">
<INPUT type="hidden" name="hl" value="zh-CN">
<!-- SiteSearch Google -->
</FORM>
</DIV>
<!-- end: search box -->

<!-- begin: 广1 -->
<DIV id="topad">
<SCRIPT type="text/javascript"><!--
google_ad_client = "pub-5801877696325956";
google_ad_width = 728;
google_ad_height = 90;
google_ad_format = "728x90_as";
google_ad_type = "text_image";
//2007-05-10: JavaNB_Doc_Page_728x90
google_ad_channel = "0010594427";
google_color_border = "FFFFFF";
google_color_bg = "FFFFFF";
google_color_link = "776655";
google_color_text = "000000";
google_color_url = "776655";
//-->
</SCRIPT>
<SCRIPT type="text/javascript" src="./12.5.&#160;iBATIS SQL Maps - Spring Framework reference 2.0.5 参考手册中文版 - 在线文档 - JAVA 编程资料牛鼻站_files/show_ads.js">
</SCRIPT><IFRAME name="google_ads_frame" width="728" height="90" frameborder="0" src="./12.5.&#160;iBATIS SQL Maps - Spring Framework reference 2.0.5 参考手册中文版 - 在线文档 - JAVA 编程资料牛鼻站_files/ads(1).htm" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no"></IFRAME>
</DIV>
<!-- end: 广1 -->

<!-- begin: 广告2 --> 
<!-- div class="topad">顶部广告2</div --> 
<!-- end: 广告2 -->

<!-- #EndEditable --> 


<!-- #BeginEditable "textbody" -->
<!-- begin: 正文 -->
<DIV class="abody">

当前页面: <A href="http://doc.javanb.com/">在线文档首页</A> &gt; <A href="http://doc.javanb.com/spring-framework-reference-zh-2-0-5/">Spring Framework  reference 2.0.5  参考手册中文版</A>
<H1>12.5.&nbsp;iBATIS SQL Maps - Spring Framework  reference 2.0.5  参考手册中文版</H1>
<DIV style="float:left;margin:4px;">
<SCRIPT type="text/javascript"><!--
google_ad_client = "pub-5801877696325956";
/* JavaNB_Doc_Page_300x250 */
google_ad_slot = "2928128520";
google_ad_width = 300;
google_ad_height = 250;
//-->
</SCRIPT>
<SCRIPT type="text/javascript" src="./12.5.&#160;iBATIS SQL Maps - Spring Framework reference 2.0.5 参考手册中文版 - 在线文档 - JAVA 编程资料牛鼻站_files/show_ads.js">
</SCRIPT><IFRAME name="google_ads_frame" width="300" height="250" frameborder="0" src="./12.5.&#160;iBATIS SQL Maps - Spring Framework reference 2.0.5 参考手册中文版 - 在线文档 - JAVA 编程资料牛鼻站_files/ads(2).htm" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no"></IFRAME>
</DIV>
<DIV class="section" lang="zh-cn">
<DIV class="titlepage"><DIV><DIV><H2 class="title" style="clear: both">
<A name="orm-ibatis"></A>12.5.&nbsp;iBATIS SQL Maps</H2></DIV></DIV></DIV>
<P>Spring通过 <CODE class="literal">org.springframework.orm.ibatis</CODE> 包来支持iBATIS SQL Maps 1.x和2.x （<A href="http://www.ibatis.com/" target="_top">http://www.ibatis.com</A>）。
		与JDBC/Hibernate支持非常类似，Spring对于iBATIS的支持也采用了Template的风格，同样遵循Spring的异常体系，这些会让你喜欢上Spring的所有IoC特性。
    </P>
<P>事务管理可以由Spring标准机制进行处理。对于iBATIS来说没有特别的事务策略，除了JDBC <CODE class="interfacename">Connection</CODE> 以外，也没有特别的事务资源。
		因此，Spring标准的JDBC <CODE class="classname">DataSourceTransactionManager</CODE> 或者 <CODE class="classname">JtaTransactionManager</CODE> 已经能够完全足够了。</P>
<DIV class="section" lang="zh-cn">
<DIV class="titlepage"><DIV><DIV><H3 class="title">
<A name="id511191"></A>12.5.1.&nbsp;iBATIS 1.x和2.x的概览与区别</H3></DIV></DIV></DIV>
<P>Spring同时支持iBATIS SQL Maps 1.x和2.x。首先让我们先来看一下两者的区别。</P>
<P>两者XML配置文件有一点区别，节点和属性名有了些改动。你所要继承的Spring类和方法名也有一些区别。

     </P>
<DIV class="table">
<A name="id511210"></A><P class="title"><B>表&nbsp;12.1.&nbsp;iBATIS SQL Maps 1.x和2.x的支持类</B></P>
<DIV class="table-contents"><TABLE summary="iBATIS SQL Maps 1.x和2.x的支持类" border="1">
<COLGROUP>
<COL>
<COL>
<COL>
</COLGROUP>
<THEAD><TR>
<TH>特性</TH>
<TH>1.x</TH>
<TH>2.x</TH>
</TR></THEAD>
<TBODY>
<TR>
<TD>SqlMap(Client)的创建</TD>
<TD>
									<CODE class="classname">SqlMapFactoryBean</CODE>
								</TD>
<TD>
									<CODE class="literal">SqlMapClientFactoryBean</CODE>
								</TD>
</TR>
<TR>
<TD>Template风格的帮助类</TD>
<TD>
									<CODE class="classname">SqlMapTemplate</CODE>
								</TD>
<TD>
									<CODE class="classname">SqlMapClientTemplate</CODE>
								</TD>
</TR>
<TR>
<TD>使用MappedStatement的回调</TD>
<TD>
									<CODE class="interfacename">SqlMapCallback</CODE>
								</TD>
<TD>
									<CODE class="literal">SqlMapClientCallback</CODE>
								</TD>
</TR>
<TR>
<TD>DAO基类</TD>
<TD>
									<CODE class="classname">SqlMapDaoSupport</CODE>
								</TD>
<TD>
									<CODE class="literal">SqlMapClientDaoSupport</CODE>
								</TD>
</TR>
</TBODY>
</TABLE></DIV>
</DIV>
<P><BR class="table-break">
			</P>
</DIV>
<DIV class="section" lang="zh-cn">
<DIV class="titlepage"><DIV><DIV><H3 class="title">
<A name="id511375"></A>12.5.2.&nbsp;iBATIS SQL Maps 1.x</H3></DIV></DIV></DIV>
<DIV class="section" lang="zh-cn">
<DIV class="titlepage"><DIV><DIV><H4 class="title">
<A name="id511381"></A>12.5.2.1.&nbsp;创建SqlMap</H4></DIV></DIV></DIV>
<P>使用iBATIS SQL Maps包括创建一个SqlMap配置文件来定义sql语句和结果映射。Spring会通过 <CODE class="classname">SqlMapFactoryBean</CODE> 来加载并处理这些配置。</P>
<PRE class="programlisting">public class Account {

    private String name;
    private String email;

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }
}</PRE>
<P>假设我们要映射这个类，我们需要创建如下的 <CODE class="literal">SqlMap</CODE>。通过使用查询，稍后我们可以用email地址来查找对应的用户。<CODE class="literal">Account.xml</CODE> 如下：</P>
<PRE class="programlisting">&lt;sql-map name=&quot;Account&quot;&gt;

  &lt;result-map name=&quot;result&quot; class=&quot;examples.Account&quot;&gt;
    &lt;property name=&quot;name&quot; column=&quot;NAME&quot; columnIndex=&quot;1&quot;/&gt;
    &lt;property name=&quot;email&quot; column=&quot;EMAIL&quot; columnIndex=&quot;2&quot;/&gt;
  &lt;/result-map&gt;

  &lt;mapped-statement name=&quot;getAccountByEmail&quot; result-map=&quot;result&quot;&gt;
    select ACCOUNT.NAME, ACCOUNT.EMAIL
    from ACCOUNT
    where ACCOUNT.EMAIL = #value#
  &lt;/mapped-statement&gt;

  &lt;mapped-statement name=&quot;insertAccount&quot;&gt;
    insert into ACCOUNT (NAME, EMAIL) values (#name#, #email#)
  &lt;/mapped-statement&gt;

&lt;/sql-map&gt;</PRE>
<P>定义完Sql Map之后，我们需要创建一个iBATIS的配置文件（<CODE class="literal">sqlmap-config.xml</CODE>）：</P>
<PRE class="programlisting">&lt;sql-map-config&gt;

  &lt;sql-map resource=&quot;example/Account.xml&quot;/&gt;

&lt;/sql-map-config&gt;</PRE>
<P>iBATIS会从CLASSPATH加载资源，所以要确保 <CODE class="literal">Account.xml</CODE> 在CLASSPATH下。</P>
<P>通过Spring，我们可以非常容易的使用 <CODE class="classname">SqlMapFactoryBean</CODE> 来创建SqlMap：</P>
<PRE class="programlisting">&lt;beans&gt;

  &lt;bean id=&quot;dataSource&quot; class=&quot;org.apache.commons.dbcp.BasicDataSource&quot; destroy-method=&quot;close&quot;&gt;
    &lt;property name=&quot;driverClassName&quot; value=&quot;${jdbc.driverClassName}&quot;/&gt;
    &lt;property name=&quot;url&quot; value=&quot;${jdbc.url}&quot;/&gt;
    &lt;property name=&quot;username&quot; value=&quot;${jdbc.username}&quot;/&gt;
    &lt;property name=&quot;password&quot; value=&quot;${jdbc.password}&quot;/&gt;
  &lt;/bean&gt;

  &lt;bean id=&quot;sqlMap&quot; class=&quot;org.springframework.orm.ibatis.SqlMapFactoryBean&quot;&gt;
    &lt;property name=&quot;configLocation&quot; value=&quot;WEB-INF/sqlmap-config.xml&quot;/&gt;
  &lt;/bean&gt;

  ...
&lt;/beans&gt;</PRE>
</DIV>
<DIV class="section" lang="zh-cn">
<DIV class="titlepage"><DIV><DIV><H4 class="title">
<A name="id511540"></A>12.5.2.2.&nbsp;使用 <CODE class="classname">SqlMapTemplate</CODE> 和 <CODE class="classname">SqlMapDaoSupport</CODE>
				</H4></DIV></DIV></DIV>
<P>
					<CODE class="classname">SqlMapDaoSupport</CODE> 类是一个类似于 <CODE class="classname">HibernateDaoSupport</CODE> 和 <CODE class="classname">JdoDaoSupport</CODE> 的支持类。我们来实现一个DAO：</P>
<PRE class="programlisting">public class SqlMapAccountDao extends SqlMapDaoSupport implements AccountDao {

    public Account getAccount(String email) throws DataAccessException {
        return (Account) getSqlMapTemplate().executeQueryForObject(&quot;getAccountByEmail&quot;, email);
    }

    public void insertAccount(Account account) throws DataAccessException {
        getSqlMapTemplate().executeUpdate(&quot;insertAccount&quot;, account);
    }
}</PRE>
<P>正如你所看到的，我们使用预先配置好的 <CODE class="classname">SqlMapTemplate</CODE> 来执行查询。
			Spring在创建 <CODE class="literal">SqlMapAccountDao</CODE> 的时候已经使用 <CODE class="classname">SqlMapFactoryBean</CODE> 为我们初始化了 <CODE class="literal">SqlMap</CODE>，如下所示一切都准备就绪了。
			注意在iBATIS SQL Maps 1.x里面，JDBC <CODE class="interfacename">DataSource</CODE> 通常都是DAO中指定的。
        </P>
<PRE class="programlisting">&lt;beans&gt;
  ...

  &lt;bean id=&quot;accountDao&quot; class=&quot;example.SqlMapAccountDao&quot;&gt;
    &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;
    &lt;property name=&quot;sqlMap&quot; ref=&quot;sqlMap&quot;/&gt;
  &lt;/bean&gt;

&lt;/beans&gt;</PRE>
<P>注意 <CODE class="classname">SqlMapTemplate</CODE> 实例是可以手工创建的，通过传入 <CODE class="interfacename">DataSource</CODE>，并把 <CODE class="literal">SqlMap</CODE> 作为构造函数参数进行创建。
<CODE class="classname">SqlMapDaoSupport</CODE> 的基类已经预先替我们初始化了一个 <CODE class="classname">SqlMapTemplate</CODE> 实例了。
        </P>
</DIV>
</DIV>
<DIV class="section" lang="zh-cn">
<DIV class="titlepage"><DIV><DIV><H3 class="title">
<A name="id511677"></A>12.5.3.&nbsp;iBATIS SQL Maps 2.x</H3></DIV></DIV></DIV>
<DIV class="section" lang="zh-cn">
<DIV class="titlepage"><DIV><DIV><H4 class="title">
<A name="id511684"></A>12.5.3.1.&nbsp;创建SqlMapClient</H4></DIV></DIV></DIV>
<P>如果我们希望使用iBATIS 2.x来映射刚才的那个Account类，则需要创建这样一个SQL map <CODE class="literal">Account.xml</CODE>：</P>
<PRE class="programlisting">&lt;sqlMap namespace=&quot;Account&quot;&gt;

  &lt;resultMap id=&quot;result&quot; class=&quot;examples.Account&quot;&gt;
    &lt;result property=&quot;name&quot; column=&quot;NAME&quot; columnIndex=&quot;1&quot;/&gt;
    &lt;result property=&quot;email&quot; column=&quot;EMAIL&quot; columnIndex=&quot;2&quot;/&gt;
  &lt;/resultMap&gt;

  &lt;select id=&quot;getAccountByEmail&quot; resultMap=&quot;result&quot;&gt;
    select ACCOUNT.NAME, ACCOUNT.EMAIL
    from ACCOUNT
    where ACCOUNT.EMAIL = #value#
  &lt;/select&gt;

  &lt;insert id=&quot;insertAccount&quot;&gt;
    insert into ACCOUNT (NAME, EMAIL) values (#name#, #email#)
  &lt;/insert&gt;

&lt;/sqlMap&gt;</PRE>
<P>iBATIS 2的配置文件有了一些改变(<CODE class="literal">sqlmap-config.xml</CODE>):</P>
<PRE class="programlisting">&lt;sqlMapConfig&gt;

  &lt;sqlMap resource=&quot;example/Account.xml&quot;/&gt;

&lt;/sqlMapConfig&gt;</PRE>
<P>记住iBATIS从CLASSPATH下加载资源，所以必须确保 <CODE class="literal">Account.xml</CODE> 在CLASSPATH下。</P>
<P>我们可以使用Spring application context中的 <CODE class="literal">SqlMapClientFactoryBean</CODE>。
		注意iBATIS SQL Map 2.x中，JDBC <CODE class="interfacename">DataSource</CODE> 通常由 <CODE class="literal">SqlMapClientFactoryBean</CODE> 指定，并开启了延迟加载。
        </P>
<PRE class="programlisting">&lt;beans&gt;

  &lt;bean id=&quot;dataSource&quot; class=&quot;org.apache.commons.dbcp.BasicDataSource&quot; destroy-method=&quot;close&quot;&gt;
    &lt;property name=&quot;driverClassName&quot; value=&quot;${jdbc.driverClassName}&quot;/&gt;
    &lt;property name=&quot;url&quot; value=&quot;${jdbc.url}&quot;/&gt;
    &lt;property name=&quot;username&quot; value=&quot;${jdbc.username}&quot;/&gt;
    &lt;property name=&quot;password&quot; value=&quot;${jdbc.password}&quot;/&gt;
  &lt;/bean&gt;

  &lt;bean id=&quot;sqlMapClient&quot; class=&quot;org.springframework.orm.ibatis.SqlMapClientFactoryBean&quot;&gt;
    &lt;property name=&quot;configLocation&quot; value=&quot;WEB-INF/sqlmap-config.xml&quot;/&gt;
    &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;
  &lt;/bean&gt;

  ...
&lt;/beans&gt;</PRE>
</DIV>
<DIV class="section" lang="zh-cn">
<DIV class="titlepage"><DIV><DIV><H4 class="title">
<A name="id511812"></A>12.5.3.2.&nbsp;使用 <CODE class="classname">SqlMapClientTemplate</CODE> 和 <CODE class="literal">SqlMapClientDaoSupport</CODE>
				</H4></DIV></DIV></DIV>
<P>
					<CODE class="literal">SqlMapClientDaoSupport</CODE> 提供了类似 <CODE class="classname">SqlMapDaoSupport</CODE> 的功能。我们可以继承它来实现我们自己的DAO：</P>
<PRE class="programlisting">public class SqlMapAccountDao extends SqlMapClientDaoSupport implements AccountDao {

    public Account getAccount(String email) throws DataAccessException {
        return (Account) getSqlMapClientTemplate().queryForObject(&quot;getAccountByEmail&quot;, email);
    }

    public void insertAccount(Account account) throws DataAccessException {
        getSqlMapClientTemplate().update(&quot;insertAccount&quot;, account);
    }
}</PRE>
<P>我们可以在application context中创建了 <CODE class="literal">SqlMapAccountDao</CODE> 并且注入 <CODE class="literal">SqlMapClient</CODE> 实例，这样我们就可以在DAO中使用预先配置的 <CODE class="classname">SqlMapClientTemplate</CODE> 来执行查询了：
        </P>
<PRE class="programlisting">&lt;beans&gt;
  ...

  &lt;bean id=&quot;accountDao&quot; class=&quot;example.SqlMapAccountDao&quot;&gt;
    &lt;property name=&quot;sqlMapClient&quot; ref=&quot;sqlMapClient&quot;/&gt;
  &lt;/bean&gt;

&lt;/beans&gt;</PRE>
<P>注意 <CODE class="classname">SqlMapTemplate</CODE> 实例也可以手工创建，使用 <CODE class="literal">SqlMapClient</CODE> 作为构造函数参数。
<CODE class="literal">SqlMapClientDaoSupport</CODE> 基类为我们预先初始化了一个 <CODE class="classname">SqlMapClientTemplate</CODE> 实例。</P>
<P>
					<CODE class="classname">SqlMapClientTemplate</CODE> 还提供了一个通用的 <CODE class="literal">execute</CODE> 方法，将用户自定义的 <CODE class="literal">SqlMapClientCallback</CODE> 的实现作为参数。
举例来说，这可以实现批量操作：</P>
<PRE class="programlisting">public class SqlMapAccountDao extends SqlMapClientDaoSupport implements AccountDao {
    ...

    public void insertAccount(Account account) throws DataAccessException {
        getSqlMapClientTemplate().execute(new SqlMapClientCallback() {
            public Object doInSqlMapClient(SqlMapExecutor executor) throws SQLException {
                executor.startBatch();
                executor.update(&quot;insertAccount&quot;, account);
                executor.update(&quot;insertAddress&quot;, account.getAddress());
                executor.executeBatch();
            }
        });
    }
}</PRE>
<P>一般来说，任何由 <CODE class="literal">SqlMapExecutor</CODE> API提供的操作组合都以这样的回调形式被使用。
			而在这个过程中产生的任何 <CODE class="literal">SQLException</CODE> 都将被自动地转化为Spring的通用的 <CODE class="classname">DataAccessException</CODE> 异常体系。</P>
</DIV>
<DIV class="section" lang="zh-cn">
<DIV class="titlepage"><DIV><DIV><H4 class="title">
<A name="id512010"></A>12.5.3.3.&nbsp;基于原生的iBATIS API的DAO实现</H4></DIV></DIV></DIV>
<P>你也可以基于原生的iBATIS API来编程，而无需对Spring产生任何依赖。直接使用注入的 <CODE class="literal">SqlMapClient</CODE>。
			一个相应的DAO实现类看上去就像下面这样：</P>
<PRE class="programlisting">public class SqlMapAccountDao implements AccountDao {

    private SqlMapClient sqlMapClient;

    public void setSqlMapClient(SqlMapClient sqlMapClient) {
        this.sqlMapClient = sqlMapClient;
    }

    public Account getAccount(String email) {
        try {
            return (Account) this.sqlMapClient.queryForObject(&quot;getAccountByEmail&quot;, email);
        }
        catch (SQLException ex) {
            throw new MyDaoException(ex);
        }
    }

    public void insertAccount(Account account) throws DataAccessException {
        try {
            this.sqlMapClient.update(&quot;insertAccount&quot;, account);
        }
        catch (SQLException ex) {
            throw new MyDaoException(ex);
        }
    }
}</PRE>
<P>在这种情况下，由iBATIS API抛出的 <CODE class="literal">SQLException</CODE> 异常需要以用户自定义的方式进行处理：通常封装成为你的应用程序自身的DAO异常。
		在application context中进行的整合看上去依然像以前一样，这是由于基于原生的iBATIS的DAO依然遵循IoC的模式：</P>
<PRE class="programlisting">&lt;beans&gt;
  ...

  &lt;bean id=&quot;accountDao&quot; class=&quot;example.SqlMapAccountDao&quot;&gt;
    &lt;property name=&quot;sqlMapClient&quot; ref=&quot;sqlMapClient&quot;/&gt;
  &lt;/bean&gt;

&lt;/beans&gt;</PRE>
</DIV>
</DIV>
</DIV>

 

</DIV>
<!-- end: 正文 --> 
<!-- #EndEditable --> 

<!-- begin: footer --> 
<DIV id="footer"><CENTER>
<A href="http://www.javanb.com/index.html">首页</A> | 
<A href="http://www.javanb.com/java-sitemap-bd.html">全站 Sitemap</A> | 
<A href="http://www.javanb.com/contact.html">联系我们</A> | 
<A href="http://doc.javanb.com/spring-framework-reference-zh-2-0-5/ch12s05.html#" onclick="this.style.behavior=&#39;url(#default#homepage)&#39;;this.setHomePage(&#39;http://www.javanb.com/&#39;);return(false);">设为首页</A> | 
<A href="http://doc.javanb.com/spring-framework-reference-zh-2-0-5/ch12s05.html#" onclick="window.external.AddFavorite(&#39;http://www.javanb.com/&#39;, &#39;Java 编程资料牛鼻站&#39;);return false;">收藏本站</A> 
<BR>版权所有 Copyright &copy; 2006-2007, Java 编程资料牛鼻站, All rights reserved <BR> &nbsp; 
</CENTER></DIV>
<!-- end: footer --> 

</DIV>
<!-- #EndTemplate -->
</BODY></HTML>